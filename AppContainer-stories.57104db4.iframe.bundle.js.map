{"version":3,"file":"AppContainer-stories.57104db4.iframe.bundle.js","mappings":"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","sources":["webpack:///./src/app/assets/svg/kvinne.svg","webpack:///./src/app/assets/svg/mann.svg","webpack:///./src/app/components/veiviser/VeiviserSvg.tsx","webpack:///./src/app/util/lenker.ts","webpack:///./src/app/pages/velkommen/velkommenFormConfig.ts","webpack:///./src/app/context/action/actionCreator.ts","webpack:///./src/app/steps/om-barnet/omBarnetFormConfig.ts","webpack:///./src/app/steps/utenlandsopphold/utenlandsoppholdFormTypes.ts","webpack:///./src/app/steps/søkersituasjon/søkersituasjonFormConfig.ts","webpack:///./src/app/context/EngangsstønadContextConfig.ts","webpack:///./src/app/context/reducer/engangsstønadReducer.ts","webpack:///./src/app/context/EngangsstønadContext.tsx","webpack:///./src/app/context/hooks/useEngangsstønadContext.ts","webpack:///./src/common/util/i18nUtils.ts","webpack:///./src/app/components/modal-content/Personopplysninger.tsx","webpack:///./src/app/components/modal-content/Plikter.tsx","webpack:///./src/app/amplitude/amplitude.ts","webpack:///./src/app/types/PageKeys.ts","webpack:///./src/app/pages/velkommen/Velkommen.tsx","webpack:///./src/app/util/login.ts","webpack:///./src/app/api/api.ts","webpack:///./src/app/steps/om-barnet/omBarnetQuestionsConfig.ts","webpack:///./src/app/util/globalUtil.ts","webpack:///./src/app/step-config/stepConfig.ts","webpack:///./src/app/steps/om-barnet/omBarnetValidering.ts","webpack:///./src/app/steps/om-barnet/situasjon/Født.tsx","webpack:///./src/common/storage/attachment/types/Attachment.ts","webpack:///./src/common/storage/attachment/components/util.ts","webpack:///./src/common/storage/api/attachmentApi.ts","webpack:///./src/common/components/slett-knapp/SlettKnapp.tsx","webpack:///./src/common/util/filesize.ts","webpack:///./src/common/storage/attachment/components/Attachment.tsx","webpack:///./src/common/storage/attachment/components/AttachmentList.tsx","webpack:///./src/app/components/formik-file-uploader/FormikFileUploader.tsx","webpack:///./src/app/steps/om-barnet/situasjon/Termin.tsx","webpack:///./src/app/steps/om-barnet/situasjon/Adopsjon.tsx","webpack:///./src/app/steps/om-barnet/OmBarnet.tsx","webpack:///./src/app/steps/om-barnet/omBarnetUtils.ts","webpack:///./src/app/steps/utenlandsopphold/utenlandsoppholdFormQuestions.ts","webpack:///./src/app/steps/utenlandsopphold/utenlandsoppholdValidering.ts","webpack:///./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandForm.tsx","webpack:///./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/types.ts","webpack:///./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandList.tsx","webpack:///./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandListAndDialog.tsx","webpack:///./src/app/steps/utenlandsopphold/Utenlandsopphold.tsx","webpack:///./src/app/steps/utenlandsopphold/utenlandsoppholdFormUtils.ts","webpack:///./src/common/components/custom-svg/CustomSVG.tsx","webpack:///./src/app/components/søkers-personalia/SøkersPersonalia.tsx","webpack:///./src/app/steps/oppsummering/Oppsummeringspunkt.tsx","webpack:///./src/app/util/formats/formatUtils.ts","webpack:///./src/common/components/labeltekst/Labeltekst.tsx","webpack:///./src/app/steps/oppsummering/OmBarnetOppsummering.tsx","webpack:///./src/app/steps/oppsummering/LandOppsummering.tsx","webpack:///./src/app/steps/oppsummering/UtenlandsoppholdOppsummering.tsx","webpack:///./src/app/steps/oppsummering/oppsummeringFormConfig.ts","webpack:///./src/app/steps/oppsummering/oppsummeringQuestionsConfig.ts","webpack:///./src/app/util/apiUtils.ts","webpack:///./src/app/steps/oppsummering/Oppsummering.tsx","webpack:///./src/app/pages/umyndig/Umyndig.tsx","webpack:///./src/app/util/pdfUtils.ts","webpack:///./src/app/pages/søknad-sendt/assets/SpotlightLetter.tsx","webpack:///./src/app/pages/søknad-sendt/components/KvitteringHeader.tsx","webpack:///./src/app/pages/søknad-sendt/components/StatusBoks.tsx","webpack:///./src/app/pages/søknad-sendt/assets/CheckmarkIkon.tsx","webpack:///./src/app/pages/søknad-sendt/components/KvitteringSuksess.tsx","webpack:///./src/app/pages/søknad-sendt/assets/KalenderIkon.tsx","webpack:///./src/app/pages/søknad-sendt/assets/UtbetalingerIkon.tsx","webpack:///./src/app/pages/søknad-sendt/components/SøknadSendtIkon.tsx","webpack:///./src/app/pages/søknad-sendt/components/SøknadSendtSectionHeader.tsx","webpack:///./src/app/pages/søknad-sendt/components/SøknadtSendtTittel.tsx","webpack:///./src/app/pages/søknad-sendt/SøknadSendt.tsx","webpack:///./src/app/steps/søkersituasjon/søkersituasjonQuestionsConfig.ts","webpack:///./src/app/steps/søkersituasjon/Søkersituasjon.tsx","webpack:///./src/app/steps/søkersituasjon/søkersituasjonUtils.ts","webpack:///./src/app/components/feilside/Feilside.tsx","webpack:///./src/app/Engangsstønad.tsx","webpack:///./src/app/api/apiHooks.ts","webpack:///./src/app/AppContainer.tsx","webpack:///./src/app/AppContainer.stories.tsx"],"sourcesContent":["import SpriteSymbol from \"../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"kvinne\",\n  \"use\": \"kvinne-usage\",\n  \"viewBox\": \"0 0 40 40\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" role=\\\"img\\\" aria-hidden=\\\"true\\\" viewBox=\\\"0 0 40 40\\\" id=\\\"kvinne\\\">\\r\\n    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n        <circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"#FFF\\\" />\\r\\n        <path fill=\\\"#C86151\\\" d=\\\"M20 0C8.955 0 0 8.954 0 20c0 11.045 8.954 20 20 20s20-8.954 20-20C40 8.955 31.045 0 20 0zm-.001 4.968a2.422 2.422 0 1 1 0 4.845 2.422 2.422 0 0 1 0-4.845zm7.378 17.35a1.162 1.162 0 0 1-1.378-.626l-1.853-6.02a.56.56 0 0 0-.7-.373.553.553 0 0 0-.38.611c-.008.01 2.74 8.988 3.16 10.362h-3.014v7.38a1.378 1.378 0 1 1-2.757 0V26.271h-.911v7.38a1.379 1.379 0 0 1-2.756 0v-7.38h-3.015c.42-1.374 3.169-10.35 3.16-10.361a.552.552 0 0 0-.38-.612.56.56 0 0 0-.7.373L14 21.693a1.162 1.162 0 0 1-1.377.626c-.609-.183-.948-.84-.758-1.464 0 0 2.572-8.134 2.6-8.193.7-2.185 2.466-2.178 4.09-2.182h2.889c1.624.004 3.39-.003 4.088 2.182.03.06 2.601 8.193 2.601 8.193.191.623-.149 1.28-.756 1.464z\\\" />\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"mann\",\n  \"use\": \"mann-usage\",\n  \"viewBox\": \"0 0 32 32\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" role=\\\"img\\\" aria-hidden=\\\"true\\\" viewBox=\\\"0 0 32 32\\\" id=\\\"mann\\\">\\r\\n    <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" transform=\\\"translate(0.000000, -11.000000)\\\">\\r\\n        <g transform=\\\"translate(0.000000, 11.000000)\\\">\\r\\n            <circle fill=\\\"#FFFFFF\\\" cx=\\\"16\\\" cy=\\\"16\\\" r=\\\"16\\\" />\\r\\n            <g stroke-width=\\\"1\\\">\\r\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,0 C7.164,0 0,7.164 0,16 C0,24.836 7.1635,32 16,32 C24.8365,32 32,24.8365 32,16 C32,7.164 24.836,0 16,0 L16,0 Z M15.9995,3.9745 C17.069,3.9745 17.9375,4.8415 17.9375,5.9115 C17.9375,6.9815 17.0685,7.849 15.9995,7.849 C14.93,7.849 14.063,6.981 14.063,5.9115 C14.063,4.842 14.93,3.9745 15.9995,3.9745 L15.9995,3.9745 Z M21.0465,11.765 L21.0465,17.1645 C21.0465,17.6 20.6585,17.9515 20.1795,17.9515 C19.7,17.9515 19.3115,17.6 19.3115,17.1645 L19.3115,14.2465 L19.3115,13.287 L19.3115,12.6895 L19.3115,12.689 C19.3115,12.486 19.147,12.321 18.9435,12.321 C18.749,12.321 18.594,12.473 18.5805,12.664 C18.578,12.6735 18.57,12.6795 18.57,12.6895 L18.57,14.3645 L18.57,26.923 C18.57,27.5325 18.077,28.026 17.468,28.026 C16.859,28.026 16.3645,27.532 16.3645,26.923 L16.3645,26.908 L16.3645,21.194 L16.3645,18.43 L16.3645,17.8995 C16.3645,17.6995 16.2015,17.536 16,17.5355 C15.798,17.5355 15.6355,17.6995 15.6355,17.8995 L15.6355,18.43 L15.6355,21.194 L15.6355,26.9075 L15.6355,26.9225 C15.6355,27.532 15.1415,28.0255 14.532,28.0255 C13.923,28.0255 13.43,27.5315 13.43,26.9225 L13.43,14.364 L13.43,12.689 C13.43,12.679 13.4215,12.6725 13.4195,12.6635 C13.406,12.4725 13.251,12.3205 13.0565,12.3205 C12.8535,12.3205 12.6885,12.485 12.6885,12.6885 L12.6885,12.689 L12.6885,13.2865 L12.6885,14.246 L12.6885,17.164 C12.6885,17.5995 12.3,17.951 11.8205,17.951 C11.341,17.951 10.9535,17.5995 10.9535,17.164 L10.9535,11.7645 L10.9535,11.4155 C10.9535,9.7225 12.758,8.4885 14.4285,8.395 L15.6325,8.387 L15.6325,8.3825 L16.0005,8.385 L16.3685,8.3825 L16.3685,8.387 L17.5725,8.395 C19.2425,8.488 21.0475,9.7225 21.0475,11.4155 C21.0465,11.4915 21.0465,11.729 21.0465,11.765 L21.0465,11.765 Z\\\" />\\r\\n                <path fill=\\\"#3385D1\\\" d=\\\"M16,0 C7.164,0 0,7.164 0,16 C0,24.836 7.1635,32 16,32 C24.8365,32 32,24.8365 32,16 C32,7.164 24.836,0 16,0 L16,0 Z M15.9995,3.9745 C17.069,3.9745 17.9375,4.8415 17.9375,5.9115 C17.9375,6.9815 17.0685,7.849 15.9995,7.849 C14.93,7.849 14.063,6.981 14.063,5.9115 C14.063,4.842 14.93,3.9745 15.9995,3.9745 L15.9995,3.9745 Z M21.0465,11.765 L21.0465,17.1645 C21.0465,17.6 20.6585,17.9515 20.1795,17.9515 C19.7,17.9515 19.3115,17.6 19.3115,17.1645 L19.3115,14.2465 L19.3115,13.287 L19.3115,12.6895 L19.3115,12.689 C19.3115,12.486 19.147,12.321 18.9435,12.321 C18.749,12.321 18.594,12.473 18.5805,12.664 C18.578,12.6735 18.57,12.6795 18.57,12.6895 L18.57,14.3645 L18.57,26.923 C18.57,27.5325 18.077,28.026 17.468,28.026 C16.859,28.026 16.3645,27.532 16.3645,26.923 L16.3645,26.908 L16.3645,21.194 L16.3645,18.43 L16.3645,17.8995 C16.3645,17.6995 16.2015,17.536 16,17.5355 C15.798,17.5355 15.6355,17.6995 15.6355,17.8995 L15.6355,18.43 L15.6355,21.194 L15.6355,26.9075 L15.6355,26.9225 C15.6355,27.532 15.1415,28.0255 14.532,28.0255 C13.923,28.0255 13.43,27.5315 13.43,26.9225 L13.43,14.364 L13.43,12.689 C13.43,12.679 13.4215,12.6725 13.4195,12.6635 C13.406,12.4725 13.251,12.3205 13.0565,12.3205 C12.8535,12.3205 12.6885,12.485 12.6885,12.6885 L12.6885,12.689 L12.6885,13.2865 L12.6885,14.246 L12.6885,17.164 C12.6885,17.5995 12.3,17.951 11.8205,17.951 C11.341,17.951 10.9535,17.5995 10.9535,17.164 L10.9535,11.7645 L10.9535,11.4155 C10.9535,9.7225 12.758,8.4885 14.4285,8.395 L15.6325,8.387 L15.6325,8.3825 L16.0005,8.385 L16.3685,8.3825 L16.3685,8.387 L17.5725,8.395 C19.2425,8.488 21.0475,9.7225 21.0475,11.4155 C21.0465,11.4915 21.0465,11.729 21.0465,11.765 L21.0465,11.765 Z\\\" />\\r\\n            </g>\\r\\n        </g>\\r\\n    </g>\\r\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import React from 'react';\r\n\r\nconst Veiviser: React.FunctionComponent<any> = (props: any) => (\r\n    <svg width={80} height={80} role=\"img\" aria-hidden=\"true\" viewBox=\"0 0 64 64\" {...props}>\r\n        <g transform=\"translate(-1)\" fill=\"none\" fillRule=\"evenodd\">\r\n            <circle fill=\"#C1B5D0\" cx={33} cy={32} r={32} />\r\n            <g transform=\"translate(.5)\">\r\n                <circle fill=\"#C1B5D0\" cx={32.5} cy={32} r={32} />\r\n                <path d=\"M30.944 8.604v54.754h3.112V8.604h-3.112z\" stroke=\"#7F756C\" strokeWidth={1.035} fill=\"#FFF\" />\r\n                <path\r\n                    stroke=\"#7F756C\"\r\n                    strokeWidth={1.082}\r\n                    fill=\"#FFF\"\r\n                    d=\"M19.27 15.192l24.481-.447 4.817 3.587-4.695 3.76-24.48.447zM45.294 26.775l-.244 7.334-24.469-.894-4.631-3.84 4.875-3.493z\"\r\n                />\r\n                <path\r\n                    d=\"M37.726 63.575c-1.03.17-2.077.29-3.138.358h-.663c.36-1.506 1.053-3.158 2.078-4.956 1.025-1.798 2.73-3.451 5.114-4.959-1.246 1.944-2.121 3.86-2.626 5.748-.442 1.652-.696 2.921-.765 3.81z\"\r\n                    fill=\"#38A161\"\r\n                />\r\n                <path\r\n                    d=\"M40.565 62.975c-.794.206-1.601.383-2.419.528.415-1.203 1.039-2.494 1.871-3.874.844-1.4 2.068-2.617 3.672-3.653-.994 1.501-1.766 3.012-2.317 4.534a33.73 33.73 0 0 0-.807 2.465z\"\r\n                    fill=\"#117938\"\r\n                />\r\n                <path\r\n                    d=\"M38.667 63.406c-.51.1-1.026.188-1.545.263.273-.972.67-2.019 1.194-3.14.56-1.202 1.376-2.27 2.446-3.207a21.158 21.158 0 0 0-1.536 3.873c-.255.9-.44 1.638-.559 2.211z\"\r\n                    fill=\"#6AB889\"\r\n                />\r\n                <path\r\n                    d=\"M34.793 63.92l-.205.013h-3.579c.36-1.506 1.053-3.158 2.078-4.956 1.024-1.798 2.73-3.451 5.114-4.959-1.246 1.944-2.121 3.86-2.626 5.748-.502 1.878-.763 3.263-.782 4.153z\"\r\n                    fill=\"#06893A\"\r\n                />\r\n                <path\r\n                    d=\"M30.412 63.933a32.165 32.165 0 0 1-1.7-.155c-.042-.893-.301-2.23-.778-4.012-.505-1.888-1.38-3.804-2.626-5.748 2.385 1.508 4.09 3.16 5.115 4.959 1.024 1.798 1.717 3.45 2.077 4.956h-2.088z\"\r\n                    fill=\"#38A161\"\r\n                />\r\n                <path\r\n                    d=\"M26.88 63.508c-.454-.08-.904-.17-1.35-.27a33.855 33.855 0 0 0-1.036-1.99 21.466 21.466 0 0 0-2.39-3.437c1.258.678 2.3 1.54 3.123 2.589.824 1.048 1.488 2.044 1.992 2.987l-.34.121z\"\r\n                    fill=\"#6AB889\"\r\n                />\r\n                <path\r\n                    d=\"M28.975 63.808c-.486-.053-.97-.117-1.45-.192.25-.952.617-1.977 1.098-3.074.533-1.214 1.323-2.3 2.371-3.26a21.134 21.134 0 0 0-1.446 3.906c-.291 1.13-.482 2.004-.573 2.62z\"\r\n                    fill=\"#06893A\"\r\n                />\r\n                <path\r\n                    d=\"M28.339 63.732a31.908 31.908 0 0 1-2.243-.373c-.059-.725-.204-1.702-.436-2.929-.3-1.587-.82-3.197-1.561-4.831 1.417 1.267 2.43 2.657 3.04 4.168.578 1.432.977 2.753 1.2 3.965z\"\r\n                    fill=\"#38A161\"\r\n                />\r\n                <path\r\n                    d=\"M27.804 57.811c1.26.678 2.3 1.54 3.124 2.589.824 1.048 1.488 2.044 1.992 2.987l-1.409.5c-.225-.583-.664-1.463-1.316-2.64a21.466 21.466 0 0 0-2.39-3.436z\"\r\n                    fill=\"#06893A\"\r\n                />\r\n                <path\r\n                    d=\"M29.08 55.599c1.417 1.267 2.43 2.657 3.04 4.168.61 1.511 1.021 2.9 1.235 4.166h-2.25c-.01-.748-.164-1.916-.464-3.503-.3-1.587-.82-3.197-1.562-4.831z\"\r\n                    fill=\"#6AB889\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default Veiviser;\r\n","export const lenker = {\r\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\r\n    brukerstøtte:\r\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\r\n    dittNav: 'https://tjenester.nav.no/dittnav/oversikt',\r\n    foreldrepenger: 'https://foreldrepenger.nav.no',\r\n    nav: 'https://www.nav.no',\r\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\r\n    personvernerklæring:\r\n        'https://www.nav.no/no/NAV+og+samfunn/Om+NAV/personvern-i-arbeids-og-velferdsetaten/personvernerkl%C3%A6ring-for-arbeids-og-velferdsetaten',\r\n    plikter: 'https://nav.no/rettOgPlikt',\r\n    søknadsveileder: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\r\n    veiviser: 'https://familie.nav.no/veiviser',\r\n    innsyn: 'https://foreldrepenger.nav.no',\r\n};\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum VelkommenFormField {\r\n    harForståttRettigheterOgPlikter = 'harForståttRettigheterOgPlikter',\r\n}\r\n\r\nexport interface VelkommenFormData {\r\n    [VelkommenFormField.harForståttRettigheterOgPlikter]: boolean;\r\n}\r\n\r\nexport const initialVelkommenValues: VelkommenFormData = {\r\n    [VelkommenFormField.harForståttRettigheterOgPlikter]: false,\r\n};\r\n\r\nexport const VelkommenFormComponents = getTypedFormComponents<VelkommenFormField, VelkommenFormData>();\r\n","import { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\r\nimport Kvittering from 'app/types/services/Kvittering';\r\nimport { UtenlandsoppholdFormData } from 'app/steps/utenlandsopphold/utenlandsoppholdFormTypes';\r\nimport { VelkommenFormData } from 'app/pages/velkommen/velkommenFormConfig';\r\nimport { SøkersituasjonFormData } from 'app/steps/søkersituasjon/søkersituasjonFormConfig';\r\n\r\nexport enum EngangsstønadContextActionKeys {\r\n    'SET_SØKERSITUASJON' = 'setSøkersituasjon',\r\n    'SET_OM_BARNET' = 'setOmBarnet',\r\n    'SET_UTENLANDSOPPHOLD' = 'setUtenlandsopphold',\r\n    'SET_VELKOMMEN' = 'setVelkommen',\r\n    'SET_KVITTERING' = 'setKvittering',\r\n    'AVBRYT_SØKNAD' = 'avbrytSøknad',\r\n}\r\n\r\ninterface AvbrytSøknad {\r\n    type: EngangsstønadContextActionKeys.AVBRYT_SØKNAD;\r\n}\r\n\r\nconst avbrytSøknad = (): AvbrytSøknad => ({\r\n    type: EngangsstønadContextActionKeys.AVBRYT_SØKNAD,\r\n});\r\n\r\ninterface SetKvittering {\r\n    type: EngangsstønadContextActionKeys.SET_KVITTERING;\r\n    payload: Kvittering;\r\n}\r\n\r\nconst setKvittering = (payload: Kvittering): SetKvittering => ({\r\n    type: EngangsstønadContextActionKeys.SET_KVITTERING,\r\n    payload,\r\n});\r\n\r\ninterface SetVelkommen {\r\n    type: EngangsstønadContextActionKeys.SET_VELKOMMEN;\r\n    payload: VelkommenFormData;\r\n}\r\n\r\nconst setVelkommen = (payload: VelkommenFormData): SetVelkommen => ({\r\n    type: EngangsstønadContextActionKeys.SET_VELKOMMEN,\r\n    payload,\r\n});\r\n\r\ninterface SetSøkersituasjon {\r\n    type: EngangsstønadContextActionKeys.SET_SØKERSITUASJON;\r\n    payload: SøkersituasjonFormData;\r\n}\r\n\r\nconst setSøkersituasjon = (payload: SøkersituasjonFormData): SetSøkersituasjon => ({\r\n    type: EngangsstønadContextActionKeys.SET_SØKERSITUASJON,\r\n    payload,\r\n});\r\n\r\ninterface SetUtenlandsopphold {\r\n    type: EngangsstønadContextActionKeys.SET_UTENLANDSOPPHOLD;\r\n    payload: UtenlandsoppholdFormData;\r\n}\r\n\r\nconst setUtenlandsopphold = (payload: UtenlandsoppholdFormData): SetUtenlandsopphold => ({\r\n    type: EngangsstønadContextActionKeys.SET_UTENLANDSOPPHOLD,\r\n    payload,\r\n});\r\n\r\ninterface SetOmBarnet {\r\n    type: EngangsstønadContextActionKeys.SET_OM_BARNET;\r\n    payload: OmBarnetFormData;\r\n}\r\n\r\nconst setOmBarnet = (payload: OmBarnetFormData): SetOmBarnet => ({\r\n    type: EngangsstønadContextActionKeys.SET_OM_BARNET,\r\n    payload,\r\n});\r\n\r\nexport type EngangsstønadContextAction =\r\n    | SetOmBarnet\r\n    | SetSøkersituasjon\r\n    | SetUtenlandsopphold\r\n    | SetVelkommen\r\n    | SetKvittering\r\n    | AvbrytSøknad;\r\n\r\nexport default {\r\n    setVelkommen,\r\n    setSøkersituasjon,\r\n    setOmBarnet,\r\n    setUtenlandsopphold,\r\n    setKvittering,\r\n    avbrytSøknad,\r\n};\r\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum OmBarnetFormField {\r\n    erBarnetFødt = 'erBarnetFødt',\r\n    adopsjonAvEktefellesBarn = 'adopsjonAvEktefellesBarn',\r\n    antallBarn = 'antallBarn',\r\n    adopsjonsdato = 'adopsjonsdato',\r\n    søkerAdopsjonAlene = 'søkerAdopsjonAlene',\r\n    fødselsdatoer = 'fødselsdatoer',\r\n    termindato = 'termindato',\r\n    omsorgsovertakelse = 'omsorgsovertakelse',\r\n    terminbekreftelse = 'terminbekreftelse',\r\n    terminbekreftelsedato = 'terminbekreftelsedato',\r\n}\r\n\r\nexport interface OmBarnetFormData {\r\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo;\r\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo;\r\n    [OmBarnetFormField.antallBarn]?: string;\r\n    [OmBarnetFormField.adopsjonsdato]?: string;\r\n    [OmBarnetFormField.søkerAdopsjonAlene]: YesOrNo;\r\n    [OmBarnetFormField.fødselsdatoer]: string[];\r\n    [OmBarnetFormField.termindato]?: string;\r\n    [OmBarnetFormField.omsorgsovertakelse]: any[];\r\n    [OmBarnetFormField.terminbekreftelse]: any[];\r\n    [OmBarnetFormField.terminbekreftelsedato]?: string;\r\n}\r\n\r\nexport const initialOmBarnetValues: OmBarnetFormData = {\r\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo.UNANSWERED,\r\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo.UNANSWERED,\r\n    [OmBarnetFormField.antallBarn]: undefined,\r\n    [OmBarnetFormField.adopsjonsdato]: undefined,\r\n    [OmBarnetFormField.søkerAdopsjonAlene]: YesOrNo.UNANSWERED,\r\n    [OmBarnetFormField.fødselsdatoer]: [],\r\n    [OmBarnetFormField.termindato]: undefined,\r\n    [OmBarnetFormField.omsorgsovertakelse]: [],\r\n    [OmBarnetFormField.terminbekreftelse]: [],\r\n    [OmBarnetFormField.terminbekreftelsedato]: undefined,\r\n};\r\n\r\nexport const OmBarnetFormComponents = getTypedFormComponents<OmBarnetFormField, OmBarnetFormData>();\r\n","import { BostedUtland } from './bostedUtlandListAndDialog/types';\r\nimport { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport const enum UtenlandsoppholdFieldNames {\r\n    harBoddUtenforNorgeSiste12Mnd = 'harBoddUtenforNorgeSiste12Mnd',\r\n    utenlandsoppholdSiste12Mnd = 'utenlandsoppholdSiste12Mnd',\r\n    skalBoUtenforNorgeNeste12Mnd = 'skalBoUtenforNorgeNeste12Mnd',\r\n    utenlandsoppholdNeste12Mnd = 'utenlandsoppholdNeste12Mnd',\r\n}\r\n\r\nexport interface UtenlandsoppholdFormData {\r\n    [UtenlandsoppholdFieldNames.harBoddUtenforNorgeSiste12Mnd]: YesOrNo;\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: BostedUtland[];\r\n    [UtenlandsoppholdFieldNames.skalBoUtenforNorgeNeste12Mnd]: YesOrNo;\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: BostedUtland[];\r\n}\r\n\r\nexport const initialUtenlandsoppholdFormData: UtenlandsoppholdFormData = {\r\n    [UtenlandsoppholdFieldNames.harBoddUtenforNorgeSiste12Mnd]: YesOrNo.UNANSWERED,\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: [],\r\n    [UtenlandsoppholdFieldNames.skalBoUtenforNorgeNeste12Mnd]: YesOrNo.UNANSWERED,\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: [],\r\n};\r\n\r\nexport const UtenlandsoppholdFormComponents = getTypedFormComponents<\r\n    UtenlandsoppholdFieldNames,\r\n    UtenlandsoppholdFormData\r\n>();\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum SøkersituasjonFormField {\r\n    situasjon = 'situasjon',\r\n}\r\n\r\nexport interface SøkersituasjonFormData {\r\n    [SøkersituasjonFormField.situasjon]?: string;\r\n}\r\n\r\nexport const initialSøkersituasjonValues: SøkersituasjonFormData = {\r\n    [SøkersituasjonFormField.situasjon]: undefined,\r\n};\r\n\r\nexport const SøkersituasjonFormComponents = getTypedFormComponents<SøkersituasjonFormField, SøkersituasjonFormData>();\r\n","import { initialOmBarnetValues, OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\r\nimport Kvittering from 'app/types/services/Kvittering';\r\nimport {\r\n    initialUtenlandsoppholdFormData,\r\n    UtenlandsoppholdFormData,\r\n} from 'app/steps/utenlandsopphold/utenlandsoppholdFormTypes';\r\nimport { initialVelkommenValues, VelkommenFormData } from 'app/pages/velkommen/velkommenFormConfig';\r\nimport { initialSøkersituasjonValues, SøkersituasjonFormData } from 'app/steps/søkersituasjon/søkersituasjonFormConfig';\r\n\r\nexport interface EngangsstønadContextState {\r\n    søknad: {\r\n        velkommen: VelkommenFormData;\r\n        søkersituasjon: SøkersituasjonFormData;\r\n        omBarnet: OmBarnetFormData;\r\n        utenlandsopphold: UtenlandsoppholdFormData;\r\n    };\r\n    kvittering: Kvittering | undefined;\r\n}\r\n\r\nexport const engangsstønadInitialState: EngangsstønadContextState = {\r\n    søknad: {\r\n        velkommen: initialVelkommenValues,\r\n        søkersituasjon: initialSøkersituasjonValues,\r\n        omBarnet: initialOmBarnetValues,\r\n        utenlandsopphold: initialUtenlandsoppholdFormData,\r\n    },\r\n    kvittering: undefined,\r\n};\r\n","import { EngangsstønadContextAction, EngangsstønadContextActionKeys } from '../action/actionCreator';\r\nimport { EngangsstønadContextState, engangsstønadInitialState } from '../EngangsstønadContextConfig';\r\n\r\nconst engangsstønadReducer = (\r\n    state: EngangsstønadContextState,\r\n    action: EngangsstønadContextAction\r\n): EngangsstønadContextState => {\r\n    switch (action.type) {\r\n        case EngangsstønadContextActionKeys.SET_VELKOMMEN: {\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    velkommen: {\r\n                        ...action.payload,\r\n                    },\r\n                    søkersituasjon: {\r\n                        ...state.søknad.søkersituasjon,\r\n                    },\r\n                    utenlandsopphold: {\r\n                        ...state.søknad.utenlandsopphold,\r\n                    },\r\n                    omBarnet: {\r\n                        ...state.søknad.omBarnet,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case EngangsstønadContextActionKeys.SET_SØKERSITUASJON: {\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    velkommen: {\r\n                        ...state.søknad.velkommen,\r\n                    },\r\n                    søkersituasjon: {\r\n                        ...action.payload,\r\n                    },\r\n                    utenlandsopphold: {\r\n                        ...state.søknad.utenlandsopphold,\r\n                    },\r\n                    omBarnet: {\r\n                        ...state.søknad.omBarnet,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case EngangsstønadContextActionKeys.SET_OM_BARNET: {\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    velkommen: {\r\n                        ...state.søknad.velkommen,\r\n                    },\r\n                    søkersituasjon: {\r\n                        ...state.søknad.søkersituasjon,\r\n                    },\r\n                    utenlandsopphold: {\r\n                        ...state.søknad.utenlandsopphold,\r\n                    },\r\n                    omBarnet: {\r\n                        ...action.payload,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case EngangsstønadContextActionKeys.SET_UTENLANDSOPPHOLD: {\r\n            return {\r\n                ...state,\r\n                søknad: {\r\n                    velkommen: {\r\n                        ...state.søknad.velkommen,\r\n                    },\r\n                    søkersituasjon: {\r\n                        ...state.søknad.søkersituasjon,\r\n                    },\r\n                    omBarnet: {\r\n                        ...state.søknad.omBarnet,\r\n                    },\r\n                    utenlandsopphold: {\r\n                        ...action.payload,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case EngangsstønadContextActionKeys.SET_KVITTERING: {\r\n            return {\r\n                ...state,\r\n                kvittering: action.payload,\r\n            };\r\n        }\r\n        case EngangsstønadContextActionKeys.AVBRYT_SØKNAD: {\r\n            return {\r\n                ...engangsstønadInitialState,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default engangsstønadReducer;\r\n","import React, { createContext, Dispatch, FunctionComponent, ReactNode, useMemo, useReducer } from 'react';\r\nimport { EngangsstønadContextAction } from './action/actionCreator';\r\nimport { EngangsstønadContextState, engangsstønadInitialState } from './EngangsstønadContextConfig';\r\nimport engangsstønadReducer from './reducer/engangsstønadReducer';\r\n\r\ninterface EngangsstønadContextData {\r\n    state: EngangsstønadContextState;\r\n    dispatch: Dispatch<EngangsstønadContextAction>;\r\n}\r\n\r\nexport const EngangsstønadContext = createContext<EngangsstønadContextData>(null!);\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nconst EngangsstønadContextProvider: FunctionComponent<Props> = ({ children }) => {\r\n    const [state, dispatch] = useReducer(engangsstønadReducer, engangsstønadInitialState);\r\n\r\n    const contextValue = useMemo(() => {\r\n        return { state, dispatch };\r\n    }, [state, dispatch]);\r\n\r\n    return <EngangsstønadContext.Provider value={contextValue}>{children}</EngangsstønadContext.Provider>;\r\n};\r\n\r\nexport default EngangsstønadContextProvider;\r\n","import { useContext } from 'react';\r\nimport { EngangsstønadContext } from '../EngangsstønadContext';\r\n\r\nexport const useEngangsstønadContext = () => useContext(EngangsstønadContext);\r\n","import { IntlShape } from 'react-intl';\r\n\r\ntype MessageValue = string | number | boolean | Date | null | undefined;\r\n\r\nconst getMessage = (intl: IntlShape, id: string, value?: { [key: string]: MessageValue }): string =>\r\n    intl.formatMessage({ id }, value);\r\n\r\nexport default getMessage;\r\n","import React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nconst { Undertittel, Normaltekst, Element } = require('nav-frontend-typografi');\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { lenker } from 'util/lenker';\r\nimport getMessage from 'common/util/i18nUtils';\r\n\r\nconst Personopplysninger = () => {\r\n    const intl = useIntl();\r\n    return (\r\n        <div className=\"modalContent\">\r\n            <Undertittel className=\"modalContent__header\">\r\n                {getMessage(intl, 'personopplysninger.sectionheading')}\r\n            </Undertittel>\r\n            <Normaltekst className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.ingress.1')}</Normaltekst>\r\n            <Normaltekst className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.ingress.2')}</Normaltekst>\r\n\r\n            <div className=\"blokk-xs\">\r\n                <Element className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.opplysningerViInnhenter')}\r\n                </Element>\r\n                <Normaltekst className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.opplysningerViInnhenter.ingress')}\r\n                </Normaltekst>\r\n                <ul>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.1')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.2')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.3')}</Normaltekst>\r\n                    </li>\r\n                </ul>\r\n                <Normaltekst>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.utro')}</Normaltekst>\r\n            </div>\r\n\r\n            <div>\r\n                <Element className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.lagringAvOpplysninger')}\r\n                </Element>\r\n                <Normaltekst className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.lagringAvOpplysninger.1')}\r\n                </Normaltekst>\r\n                <Normaltekst className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.lagringAvOpplysninger.2')}\r\n                </Normaltekst>\r\n            </div>\r\n\r\n            <div className=\"blokk-xs\">\r\n                <Element className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.text.automatiskLagring')}</Element>\r\n                <Normaltekst className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.automatiskLagring.ingress')}\r\n                </Normaltekst>\r\n                <ul>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.automatiskLagring.1')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.automatiskLagring.2')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.automatiskLagring.3')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.automatiskLagring.4')}</Normaltekst>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"blokk-xs\">\r\n                <Element className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.text.svarPåSøknaden')}</Element>\r\n                <Normaltekst className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.svarPåSøknaden.ingress')}\r\n                </Normaltekst>\r\n                <ul>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.svarPåSøknaden.1')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.svarPåSøknaden.2')}</Normaltekst>\r\n                    </li>\r\n                    <li>\r\n                        <Normaltekst>{getMessage(intl, 'personopplysninger.text.svarPåSøknaden.3')}</Normaltekst>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div>\r\n                <Element className=\"blokk-xs\">\r\n                    {getMessage(intl, 'personopplysninger.text.personvernerklæringeniNAV')}\r\n                </Element>\r\n                <Normaltekst>\r\n                    <FormattedMessage\r\n                        id=\"personopplysninger.text.personvernerklering\"\r\n                        values={{\r\n                            link: (\r\n                                <Lenke href={lenker.personvernerklæring} target=\"_blank\">\r\n                                    <FormattedMessage id=\"personopplysninger.text.personvernerklering.link\" />\r\n                                </Lenke>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Normaltekst>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Personopplysninger;\r\n","import React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { lenker } from 'util/lenker';\r\nimport { Normaltekst } from 'nav-frontend-typografi';\r\n\r\nimport './modalContent.less';\r\n\r\nconst Plikter = () => {\r\n    const intl = useIntl();\r\n    return (\r\n        <article className=\"modalContent\">\r\n            <ul>\r\n                <li>\r\n                    <Normaltekst>{getMessage(intl, 'rettigheter.text.2')}</Normaltekst>\r\n                </li>\r\n                <li>\r\n                    <Normaltekst>\r\n                        <FormattedMessage\r\n                            id=\"rettigheter.text.lestOgForstått\"\r\n                            values={{\r\n                                link: (\r\n                                    <Lenke href={lenker.plikter} target=\"_blank\">\r\n                                        <FormattedMessage id=\"rettigheter.text.lestOgForstått.link\" />\r\n                                    </Lenke>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Normaltekst>\r\n                </li>\r\n            </ul>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default Plikter;\r\n","import amplitude from 'amplitude-js';\r\n\r\nexport const initAmplitude = () => {\r\n    if (amplitude) {\r\n        amplitude.getInstance().init('default', '', {\r\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\r\n            saveEvents: false,\r\n            includeUtm: true,\r\n            includeReferrer: true,\r\n            platform: window.location.toString(),\r\n        });\r\n    }\r\n};\r\n\r\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = false) => {\r\n    if (logToConsoleOnly) {\r\n        return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n        try {\r\n            if (amplitude) {\r\n                amplitude.getInstance().logEvent(eventName, eventData);\r\n            }\r\n        } catch (error) {\r\n            // tslint:disable-next-line\r\n            console.error(error);\r\n        }\r\n    });\r\n};\r\n","export enum PageKeys {\r\n    Velkommen = 'velkommen',\r\n    Situasjon = 'situasjon',\r\n    OmBarnet = 'om-barnet',\r\n    Utenlandsopphold = 'utenlandsopphold',\r\n    Oppsummering = 'oppsummering',\r\n    SøknadSendt = 'søknad-sendt',\r\n    Umyndig = 'umyndig',\r\n}\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Ingress, Innholdstittel, Normaltekst } from 'nav-frontend-typografi';\r\nimport {\r\n    bemUtils,\r\n    LanguageToggle,\r\n    intlUtils,\r\n    Block,\r\n    Locale,\r\n    useDocumentTitle,\r\n    Sidebanner,\r\n    UtvidetInformasjon,\r\n} from '@navikt/fp-common';\r\nimport Veiviser from 'components/veiviser/VeiviserSvg';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport { lenker } from 'util/lenker';\r\nimport {\r\n    initialVelkommenValues,\r\n    VelkommenFormComponents,\r\n    VelkommenFormData,\r\n    VelkommenFormField,\r\n} from './velkommenFormConfig';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\r\nimport Personopplysninger from 'app/components/modal-content/Personopplysninger';\r\nimport Modal from 'nav-frontend-modal';\r\nimport Plikter from 'app/components/modal-content/Plikter';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\n\r\nimport './velkommen.less';\r\nimport { PageKeys } from 'app/types/PageKeys';\r\n\r\ninterface Props {\r\n    fornavn: string;\r\n    onChangeLocale: (locale: Locale) => void;\r\n    locale: Locale;\r\n}\r\n\r\nconst Velkommen: FunctionComponent<Props> = ({ fornavn, locale, onChangeLocale }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('velkommen');\r\n    const navigate = useNavigate();\r\n    useDocumentTitle(intlUtils(intl, 'velkommen.standard.dokumenttittel'));\r\n    const { dispatch } = useEngangsstønadContext();\r\n\r\n    logAmplitudeEvent('sidevisning', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        pageKey: PageKeys.Velkommen,\r\n    });\r\n\r\n    const onValidSubmit = (values: Partial<VelkommenFormData>) => {\r\n        dispatch(\r\n            actionCreator.setVelkommen({\r\n                harForståttRettigheterOgPlikter: values.harForståttRettigheterOgPlikter!!,\r\n            })\r\n        );\r\n        navigate('/soknad/søkersituasjon');\r\n    };\r\n\r\n    const [PersonopplysningerModalOpen, setPersonopplysningerModalOpen] = useState<boolean>(false);\r\n\r\n    return (\r\n        <VelkommenFormComponents.FormikWrapper\r\n            initialValues={initialVelkommenValues}\r\n            onSubmit={(values) => onValidSubmit(values)}\r\n            renderForm={() => {\r\n                return (\r\n                    <VelkommenFormComponents.Form includeButtons={false}>\r\n                        <LanguageToggle\r\n                            locale={locale}\r\n                            availableLocales={['en', 'nb', 'nn']}\r\n                            toggle={(l: Locale) => onChangeLocale(l)}\r\n                        />\r\n                        <Sidebanner\r\n                            dialog={{\r\n                                title: intlUtils(intl, 'velkommen.standard.bobletittel', { name: fornavn }),\r\n                                text: (\r\n                                    <>\r\n                                        <Block padBottom=\"m\">\r\n                                            <FormattedMessage id={'velkommen.standard.bobletekst.del1'} />\r\n                                        </Block>\r\n                                        <Block>\r\n                                            <FormattedMessage id={'velkommen.standard.bobletekst.del2'} />\r\n                                        </Block>\r\n                                    </>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <div className={bem.block}>\r\n                            <Block padBottom=\"xl\">\r\n                                <div className={bem.element('tittel')}>\r\n                                    <Innholdstittel>\r\n                                        {intlUtils(intl, 'velkommen.standard.velkommentittel')}\r\n                                    </Innholdstittel>\r\n                                </div>\r\n                            </Block>\r\n                            <Block padBottom=\"xl\">\r\n                                <Ingress>{intlUtils(intl, 'velkommen.standard.ingress')}</Ingress>\r\n                            </Block>\r\n                            <Block padBottom=\"xl\">\r\n                                <Veilederpanel kompakt={true} svg={<Veiviser />}>\r\n                                    <FormattedMessage id=\"velkommen.text.veiviser.del1\" />\r\n                                    <ul>\r\n                                        <li>\r\n                                            <FormattedMessage id=\"velkommen.text.veiviser.punkt1\" />\r\n                                        </li>\r\n                                        <li>\r\n                                            <FormattedMessage id=\"velkommen.text.veiviser.punkt2\" />\r\n                                        </li>\r\n                                        <li>\r\n                                            <FormattedMessage id=\"velkommen.text.veiviser.punkt3\" />\r\n                                        </li>\r\n                                        <li>\r\n                                            <FormattedMessage id=\"velkommen.text.veiviser.punkt4\" />\r\n                                        </li>\r\n                                    </ul>\r\n                                    <FormattedMessage\r\n                                        id=\"velkommen.text.veiviser.lenke\"\r\n                                        values={{\r\n                                            a: (msg: any) => (\r\n                                                <a\r\n                                                    className=\"lenke\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href={lenker.veiviser}\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    {msg}\r\n                                                </a>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </Veilederpanel>\r\n                            </Block>\r\n                            <Block padBottom=\"xl\">\r\n                                <VelkommenFormComponents.ConfirmationCheckbox\r\n                                    name={VelkommenFormField.harForståttRettigheterOgPlikter}\r\n                                    label={intlUtils(intl, 'velkommen.text.samtykke')}\r\n                                    validate={(value) => {\r\n                                        let result;\r\n                                        if (value !== true) {\r\n                                            result = intlUtils(\r\n                                                intl,\r\n                                                'valideringsfeil.velkommen.bekreftLestOgForståttRettigheter'\r\n                                            );\r\n                                        }\r\n                                        return result;\r\n                                    }}\r\n                                >\r\n                                    <>\r\n                                        <Block padBottom=\"l\">\r\n                                            <FormattedMessage id=\"velkommen.text.samtykkeIntro\" />\r\n                                        </Block>\r\n                                        <Block>\r\n                                            <UtvidetInformasjon\r\n                                                apneLabel={intlUtils(intl, 'velkommen.text.plikter.apneLabel')}\r\n                                            >\r\n                                                <Plikter />\r\n                                            </UtvidetInformasjon>\r\n                                        </Block>\r\n                                        <Normaltekst>\r\n                                            <FormattedMessage id=\"velkommen.text.kunEnStønad\" />\r\n                                        </Normaltekst>\r\n                                    </>\r\n                                </VelkommenFormComponents.ConfirmationCheckbox>\r\n                            </Block>\r\n                            <Block padBottom=\"xl\">\r\n                                <div className={bem.element('startSøknadKnapp')}>\r\n                                    <Hovedknapp>{intlUtils(intl, 'velkommen.button.startSøknad')}</Hovedknapp>\r\n                                </div>\r\n                            </Block>\r\n                            <Block>\r\n                                <div className={bem.element('personopplysningLenke')}>\r\n                                    <a\r\n                                        className=\"lenke\"\r\n                                        href=\"#\"\r\n                                        onClick={(e) => setPersonopplysningerModalOpen(!PersonopplysningerModalOpen)}\r\n                                    >\r\n                                        <FormattedMessage id=\"velkommen.text.personopplysningene.link\" />\r\n                                    </a>\r\n                                </div>\r\n                                <Modal\r\n                                    isOpen={PersonopplysningerModalOpen}\r\n                                    closeButton={true}\r\n                                    onRequestClose={() => setPersonopplysningerModalOpen(!PersonopplysningerModalOpen)}\r\n                                    contentLabel=\"rettigheter og plikter\"\r\n                                >\r\n                                    <Personopplysninger />\r\n                                </Modal>\r\n                            </Block>\r\n                        </div>\r\n                    </VelkommenFormComponents.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Velkommen;\r\n","\r\nexport const redirectToLogin = () => {\r\n    redirect((window as any).LOGIN_URL + '?redirect=' + window.location.origin);\r\n};\r\n\r\nexport const redirect = (url: string) => {\r\n    window.location.href = url;\r\n};\r\n","import { EngangsstønadSøknadDto } from '../types/domain/EngangsstønadSøknad';\r\nimport axios, { AxiosResponse, AxiosError } from 'axios';\r\nimport { redirectToLogin } from 'util/login';\r\n\r\nexport const foreldrepengersoknadApi = axios.create({\r\n    baseURL: (window as any).REST_API_URL,\r\n    withCredentials: true,\r\n});\r\n\r\nforeldrepengersoknadApi.interceptors.request.use(\r\n    (config) => {\r\n        config.withCredentials = true;\r\n        config.timeout = 60 * 1000;\r\n        return config;\r\n    }\r\n);\r\n\r\nforeldrepengersoknadApi.interceptors.response.use(\r\n    (response: AxiosResponse) => {\r\n        return response;\r\n    },\r\n    (error: AxiosError) => {\r\n        if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            error?.config?.url &&\r\n            !error.config.url.includes('/soknad')\r\n        ) {\r\n             redirectToLogin();\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst getPerson = () => {\r\n    return foreldrepengersoknadApi.get('/personinfo');\r\n};\r\n\r\nconst sendSøknad = (soknad: EngangsstønadSøknadDto) => {\r\n    return foreldrepengersoknadApi.post('/soknad', soknad, {\r\n        headers: {\r\n            'content-type': 'application/json;',\r\n        },\r\n    });\r\n};\r\n\r\nconst Api = { getPerson, sendSøknad };\r\nexport default Api;\r\n","import { hasValue } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\r\n\r\nexport interface OmBarnetQuestionPayload extends OmBarnetFormData {\r\n    situasjon: string;\r\n    kjønn: string;\r\n}\r\n\r\nconst OmBarnetFormConfig: QuestionConfig<OmBarnetQuestionPayload, OmBarnetFormField> = {\r\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: {\r\n        isIncluded: ({ situasjon }) => situasjon === 'adopsjon',\r\n        isAnswered: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ situasjon }) => situasjon === 'adopsjon',\r\n    },\r\n    [OmBarnetFormField.erBarnetFødt]: {\r\n        isIncluded: ({ situasjon }) => situasjon === 'fødsel',\r\n        isAnswered: ({ erBarnetFødt }) => erBarnetFødt !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ situasjon }) => situasjon === 'fødsel',\r\n    },\r\n    [OmBarnetFormField.antallBarn]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ antallBarn }) => hasValue(antallBarn),\r\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, søkerAdopsjonAlene, kjønn, adopsjonsdato }) =>\r\n            erBarnetFødt !== YesOrNo.UNANSWERED ||\r\n            (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato)),\r\n    },\r\n    [OmBarnetFormField.adopsjonsdato]: {\r\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        isAnswered: ({ adopsjonsdato }) => hasValue(adopsjonsdato),\r\n        visibilityFilter: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n    },\r\n    [OmBarnetFormField.søkerAdopsjonAlene]: {\r\n        isIncluded: ({ situasjon, kjønn, adopsjonAvEktefellesBarn }) =>\r\n            situasjon === 'adopsjon' && kjønn === 'M' && adopsjonAvEktefellesBarn === YesOrNo.NO,\r\n        isAnswered: ({ søkerAdopsjonAlene }) => søkerAdopsjonAlene !== YesOrNo.UNANSWERED,\r\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, fødselsdatoer }) =>\r\n            adopsjonAvEktefellesBarn === YesOrNo.NO && fødselsdatoer?.length > 0 && fødselsdatoer[0] !== '',\r\n    },\r\n    [OmBarnetFormField.fødselsdatoer]: {\r\n        isIncluded: ({ erBarnetFødt, adopsjonAvEktefellesBarn }) =>\r\n            erBarnetFødt === YesOrNo.YES || adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        isAnswered: ({ fødselsdatoer }) => fødselsdatoer?.length > 0 && fødselsdatoer[0] !== '',\r\n        visibilityFilter: ({ antallBarn }) => hasValue(antallBarn),\r\n    },\r\n    [OmBarnetFormField.omsorgsovertakelse]: {\r\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\r\n        isAnswered: ({ omsorgsovertakelse }) => omsorgsovertakelse?.length > 0,\r\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, fødselsdatoer, søkerAdopsjonAlene, kjønn }) =>\r\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && fødselsdatoer?.length > 0 && fødselsdatoer[0] !== '') ||\r\n            (adopsjonAvEktefellesBarn === YesOrNo.NO && søkerAdopsjonAlene !== YesOrNo.UNANSWERED) ||\r\n            (kjønn === 'K' && fødselsdatoer?.length > 0 && fødselsdatoer[0] !== ''),\r\n    },\r\n    [OmBarnetFormField.termindato]: {\r\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.NO,\r\n        isAnswered: ({ termindato }) => hasValue(termindato),\r\n        visibilityFilter: ({ antallBarn }) => hasValue(antallBarn),\r\n    },\r\n    [OmBarnetFormField.terminbekreftelse]: {\r\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.NO,\r\n        isAnswered: ({ terminbekreftelse }) => terminbekreftelse?.length > 0,\r\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\r\n    },\r\n    [OmBarnetFormField.terminbekreftelsedato]: {\r\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.NO,\r\n        isAnswered: ({ terminbekreftelsedato }) => hasValue(terminbekreftelsedato),\r\n        visibilityFilter: ({ terminbekreftelse }) => terminbekreftelse?.length > 0,\r\n    },\r\n};\r\n\r\nconst omBarnetQuestionsConfig = Questions<OmBarnetQuestionPayload, OmBarnetFormField>(OmBarnetFormConfig);\r\n\r\nexport default omBarnetQuestionsConfig;\r\n","import { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport actionCreator, { EngangsstønadContextAction } from 'app/context/action/actionCreator';\r\nimport { NavigateFunction } from 'react-router-dom';\r\n\r\nexport const assertUnreachable = (_x: never): never => {\r\n    throw new Error('This should never happen');\r\n};\r\n\r\nexport const onAvbrytSøknad = (dispatch: React.Dispatch<EngangsstønadContextAction>, navigate: NavigateFunction) => {\r\n    logAmplitudeEvent('applikasjon-hendelse', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        hendelse: 'avbrutt',\r\n    });\r\n\r\n    dispatch(actionCreator.avbrytSøknad());\r\n    navigate('/');\r\n};\r\n","import { assertUnreachable } from 'app/util/globalUtil';\r\ntype SøkersituasjonStepId = 'søkersituasjon';\r\ntype OmBarnetStepId = 'omBarnet';\r\ntype UtenlandsoppholdStepId = 'utenlandsopphold';\r\ntype OppsummeringStepId = 'oppsummering';\r\ntype StepIdWithBackHref = OmBarnetStepId | UtenlandsoppholdStepId | OppsummeringStepId;\r\nexport type StepId = SøkersituasjonStepId | StepIdWithBackHref;\r\ninterface StepConfig {\r\n    id: StepId;\r\n    index: number;\r\n    label: string;\r\n}\r\nconst stepConfig: StepConfig[] = [\r\n    {\r\n        id: 'søkersituasjon',\r\n        index: 0,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'omBarnet',\r\n        index: 1,\r\n        label: 'Fyll ut informasjon om barnet',\r\n    },\r\n    {\r\n        id: 'utenlandsopphold',\r\n        index: 2,\r\n        label: 'Fyll ut informasjon om utenlandsopphold',\r\n    },\r\n    {\r\n        id: 'oppsummering',\r\n        index: 3,\r\n        label: 'Oppsummering',\r\n    },\r\n];\r\nexport const getPreviousStepHref = (id: StepIdWithBackHref): string => {\r\n    let href;\r\n    switch (id) {\r\n        case 'omBarnet':\r\n            href = '/soknad/søkersituasjon';\r\n            break;\r\n        case 'utenlandsopphold':\r\n            href = '/soknad/om-barnet';\r\n            break;\r\n        case 'oppsummering':\r\n            href = '/soknad/utenlandsopphold';\r\n            break;\r\n        default:\r\n            return assertUnreachable(id);\r\n    }\r\n    return href;\r\n};\r\nexport default stepConfig;\r\n","import {\r\n    erMindreEnn3UkerSiden,\r\n    etterDagensDato,\r\n    hasValue,\r\n    sisteDatoBarnetKanVæreFødt,\r\n    sisteMuligeTermindato,\r\n    utstedtDatoErIUke22,\r\n    sisteMuligeDatoForOvertaOmsorg,\r\n    intlUtils,\r\n} from '@navikt/fp-common';\r\nimport datepickerUtils from '@navikt/sif-common-formik/lib/components/formik-datepicker/datepickerUtils';\r\nimport { IntlShape } from 'react-intl';\r\n\r\nexport const validateEktefellensBarnAdopsjonDate = (dato: string, intl: IntlShape) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.ektefellensBarn.duMåOppgi');\r\n    }\r\n\r\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\r\n        return intlUtils(intl, 'invalidFormatErrorKey.adopsjonsdato');\r\n    }\r\n\r\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nexport const validateOvertaOmsorgAdopsjonDate = (dato: string, intl: IntlShape) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.overtaOmsorg.duMåOppgi');\r\n    }\r\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const validateNårKommerBarnetDate = (dato: string, intl: IntlShape) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.nårKommerBarnetDato.duMåOppgi');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const validateFødselDate = (dato: string, intl: IntlShape) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.duMåOppgi');\r\n    }\r\n    if (etterDagensDato(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.måVæreIdagEllerTidligere');\r\n    }\r\n    if (sisteDatoBarnetKanVæreFødt(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.ikkeMerEnn6MånederTilbake');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const validateAdopsjonFødselDate = (\r\n    dato: string | undefined,\r\n    adopsjonsdato: string | undefined,\r\n    intl: IntlShape\r\n) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.duMåOppgi');\r\n    }\r\n\r\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\r\n        return intlUtils(intl, 'invalidFormatErrorKey.fødselsdato');\r\n    }\r\n\r\n    if (!dato || !adopsjonsdato) {\r\n        return undefined;\r\n    }\r\n    if (etterDagensDato(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.måVæreIdagEllerTidligere');\r\n    }\r\n    // if (!barnetErMerEnn15årPåSøknadsDato(dato, adopsjonsdato)) {\r\n    //     if (sisteDatoAdoptertBarnKanVæreFødt(dato, adopsjonsdato)) {\r\n    //         return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.ikkeMerEnn15ÅrTilbake');\r\n    //     }\r\n    //     if (barnetErIkkeFødtFørAdopsjonsDato(dato, adopsjonsdato)) {\r\n    //         return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.barnetErIkkeFødtFørAdopsjonsDato');\r\n    //     }\r\n    //     return undefined;\r\n    // }\r\n    return undefined;\r\n};\r\n\r\nexport const validateTerminDate = (dato: string, intl: IntlShape) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\r\n    }\r\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\r\n        return intlUtils(intl, 'invalidFormatErrorKey.termindato');\r\n    }\r\n    if (!erMindreEnn3UkerSiden(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.termindatoKanIkkeVære3UkerFraIdag');\r\n    }\r\n    if (sisteMuligeTermindato(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåVæreIUke22');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const valideringAvTerminbekreftelsesdato = (\r\n    dato: string | undefined,\r\n    termindato: string | undefined,\r\n    intl: IntlShape\r\n) => {\r\n    if (!hasValue(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåOppgi');\r\n    }\r\n    if (!dato || !termindato) {\r\n        return undefined;\r\n    }\r\n\r\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\r\n        return intlUtils(intl, 'invalidFormatErrorKey.terminBekreftelsedato');\r\n    }\r\n\r\n    if (etterDagensDato(dato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.måVæreIdagEllerTidligere');\r\n    }\r\n    if (!utstedtDatoErIUke22(dato, termindato)) {\r\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåVæreIUke22');\r\n    }\r\n    return undefined;\r\n};\r\n","import { Block, intlUtils } from '@navikt/fp-common';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport dayjs from 'dayjs';\r\nimport { FieldArray } from 'formik';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport { validateFødselDate } from '../omBarnetValidering';\r\n\r\ninterface Fødtprops {\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst Født: React.FunctionComponent<Fødtprops> = ({ visibility, formValues }) => {\r\n    const intl = useIntl();\r\n\r\n    if (formValues.erBarnetFødt === YesOrNo.NO || formValues.erBarnetFødt === YesOrNo.UNANSWERED) {\r\n        return null;\r\n    }\r\n    return (\r\n        <>\r\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\r\n                <>\r\n                    <Block margin=\"xl\">\r\n                        <OmBarnetFormComponents.RadioPanelGroup\r\n                            name={OmBarnetFormField.antallBarn}\r\n                            radios={[\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\r\n                                    value: '1',\r\n                                },\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\r\n                                    value: '2',\r\n                                },\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                                    value: '3',\r\n                                },\r\n                            ]}\r\n                            useTwoColumns={true}\r\n                            legend={getMessage(intl, 'omBarnet.text.antallBarn')}\r\n                        />\r\n                    </Block>\r\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\r\n                        <Block margin=\"xl\">\r\n                            <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                            </OmBarnetFormComponents.Select>\r\n                        </Block>\r\n                    )}\r\n                </>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.fødselsdatoer) && (\r\n                <Block margin=\"xl\">\r\n                    <FieldArray\r\n                        name={OmBarnetFormField.fødselsdatoer}\r\n                        render={() => [\r\n                            <OmBarnetFormComponents.DatePicker\r\n                                key={`${OmBarnetFormField.fødselsdatoer}.0`}\r\n                                name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\r\n                                label={getMessage(intl, 'søknad.fødselsdato')}\r\n                                minDate={dayjs().subtract(6, 'month').toDate()}\r\n                                maxDate={dayjs().toDate()}\r\n                                validate={(value) => validateFødselDate(value, intl)}\r\n                                placeholder={'dd.mm.åååå'}\r\n                            />,\r\n                        ]}\r\n                    />\r\n                </Block>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Født;\r\n","export interface Attachment {\r\n    id: string;\r\n    filename: string;\r\n    filesize: number;\r\n    file: File;\r\n    url?: string;\r\n    uuid?: string;\r\n    pending: boolean;\r\n    uploaded: boolean;\r\n    type: AttachmentType;\r\n    skjemanummer: Skjemanummer;\r\n    error?: any;\r\n}\r\n\r\nexport enum AttachmentType {\r\n    TERMINBEKREFTELSE = 'terminbekreftelse',\r\n    OMSORGSOVERTAKELSE = 'omsorgsovertakelse',\r\n}\r\n\r\nexport enum Skjemanummer {\r\n    TERMINBEKREFTELSE = 'I000062',\r\n    OMSORGSOVERTAKELSE = 'I000042',\r\n}\r\n","import { Attachment, AttachmentType, Skjemanummer } from 'common/storage/attachment/types/Attachment';\r\nimport { guid } from 'nav-frontend-js-utils';\r\n\r\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\r\n\r\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\r\n    return {\r\n        id: generateAttachmentId(),\r\n        file,\r\n        filename: file.name,\r\n        filesize: file.size,\r\n        uploaded: false,\r\n        pending: false,\r\n        type,\r\n        skjemanummer,\r\n    };\r\n};\r\n\r\nexport const isAttachmentWithError = ({ pending, uploaded, filesize }: Attachment) =>\r\n    (pending === false && uploaded === false) || filesize === 0;\r\n","import { Attachment } from '../attachment/types/Attachment';\r\nimport axios from 'axios';\r\n\r\nfunction saveAttachment(attachment: Attachment) {\r\n    const config = {\r\n        withCredentials: true,\r\n        timeout: 45 * 1000,\r\n        headers: {\r\n            'content-type': 'multipart/form-data',\r\n        },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('id', attachment.id);\r\n    formData.append('vedlegg', attachment.file, attachment.filename);\r\n\r\n    const url = `${(window as any).REST_API_URL}/storage/vedlegg`;\r\n    return axios.post(url, formData, config);\r\n}\r\n\r\nconst AttachmentApi = { saveAttachment };\r\n\r\nexport default AttachmentApi;\r\n","import * as React from 'react';\r\nimport { KnappBaseProps } from 'nav-frontend-knapper';\r\nimport { TrashcanIkon } from '@navikt/fp-common';\r\n\r\nimport './slettKnapp.less';\r\n\r\nexport interface SlettKnappProps extends KnappBaseProps {\r\n    ariaLabel: string;\r\n    onClick: () => void;\r\n}\r\n\r\nconst SlettKnapp: React.FunctionComponent<SlettKnappProps> = ({ onClick, ariaLabel }) => (\r\n    <button\r\n        type=\"button\"\r\n        className=\"slettKnapp\"\r\n        aria-label={ariaLabel}\r\n        onClick={(e) => {\r\n            e.stopPropagation();\r\n            onClick();\r\n        }}\r\n    >\r\n        <TrashcanIkon width={20} height={20} />\r\n    </button>\r\n);\r\n\r\nexport default SlettKnapp;\r\n","import Bytes from 'bytes';\r\n\r\nexport const bytesString = (bytes: number): string => {\r\n    return Bytes(bytes, {\r\n        unitSeparator: ' ',\r\n        thousandsSeparator: ' ',\r\n        decimalPlaces: 1,\r\n        fixedDecimals: false\r\n    });\r\n};\r\n\r\nexport const getTotalFileSize = (files: File[]): number => {\r\n    return files.reduce(\r\n        (a, b) =>\r\n            ({\r\n                size: a.size + b.size\r\n            } as any),\r\n        { size: 0 }\r\n    ).size;\r\n};\r\n","import * as React from 'react';\r\nimport * as classnames from 'classnames';\r\n\r\nimport { useIntl } from 'react-intl';\r\nimport SlettKnapp from '../../../components/slett-knapp/SlettKnapp';\r\n\r\nimport NavFrontendSpinner from 'nav-frontend-spinner';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Attachment as AttachmentType } from 'common/storage/attachment/types/Attachment';\r\nimport { bytesString } from 'common/util/filesize';\r\nimport { bemUtils, VedleggIkon } from '@navikt/fp-common';\r\n\r\nimport './attachment.less';\r\n\r\ninterface OwnProps {\r\n    attachment: AttachmentType;\r\n    showFileSize?: boolean;\r\n    onDelete?: (file: AttachmentType) => void;\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst Attachment: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('attachment');\r\n    const cls = classnames(bem.block, {\r\n        [bem.modifier('pending')]: attachment.pending,\r\n    });\r\n\r\n    return (\r\n        <div className={cls}>\r\n            {attachment.pending && (\r\n                <div className={bem.element('spinner')}>\r\n                    <NavFrontendSpinner type=\"S\" />\r\n                </div>\r\n            )}\r\n            <VedleggIkon className={bem.element('icon')} width={20} height={20} />\r\n            <div className={bem.element('filename')}>\r\n                {attachment.url ? (\r\n                    <Lenke href={attachment.url} target=\"_blank\">\r\n                        {attachment.filename}\r\n                    </Lenke>\r\n                ) : (\r\n                    <span>{attachment.filename}</span>\r\n                )}\r\n                {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\r\n            </div>\r\n            {onDelete && (\r\n                <span className={bem.element('deleteButton')}>\r\n                    <SlettKnapp\r\n                        onClick={() => onDelete(attachment)}\r\n                        ariaLabel={intl.formatMessage({ id: 'vedlegg.arialabel.slett' }, { navn: attachment.filename })}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Attachment;\r\n","import * as React from 'react';\r\nimport AttachmentComponent from './Attachment';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './attachment.less';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\n\r\ninterface Props {\r\n    attachments: Attachment[];\r\n    showFileSize?: boolean;\r\n    onDelete?: (file: Attachment) => void;\r\n}\r\n\r\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\r\n    const { attachments, showFileSize, onDelete } = props;\r\n    return (\r\n        <ul className=\"attachmentList\">\r\n            <TransitionGroup>\r\n                {attachments.map((attachment, index) => (\r\n                    <CSSTransition classNames=\"transitionFade\" timeout={500} key={index}>\r\n                        <li>\r\n                            <AttachmentComponent\r\n                                attachment={attachment}\r\n                                onDelete={onDelete}\r\n                                showFileSize={showFileSize}\r\n                            />\r\n                        </li>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n};\r\nexport default AttachmentList;\r\n","import * as React from 'react';\r\nimport { ArrayHelpers, useFormikContext } from 'formik';\r\nimport { Attachment, AttachmentType, Skjemanummer } from 'common/storage/attachment/types/Attachment';\r\nimport FormikFileInput from '@navikt/sif-common-formik/lib/components/formik-file-input/FormikFileInput';\r\nimport { OmBarnetFormData, OmBarnetFormField } from 'app/steps/om-barnet/omBarnetFormConfig';\r\nimport { isAttachmentWithError, mapFileToAttachment } from 'common/storage/attachment/components/util';\r\nimport AttachmentApi from 'common/storage/api/attachmentApi';\r\nimport AttachmentList from 'common/storage/attachment/components/AttachmentList';\r\nimport { Block } from '@navikt/fp-common';\r\n\r\nexport type FieldArrayReplaceFn = (index: number, value: any) => void;\r\nexport type FieldArrayPushFn = (obj: any) => void;\r\nexport type FieldArrayRemoveFn = (index: number) => undefined;\r\n\r\ninterface Props {\r\n    attachments: Attachment[];\r\n    name: OmBarnetFormField;\r\n    label: string;\r\n    validate?: any;\r\n    onFileInputClick?: () => void;\r\n}\r\n\r\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\r\n\r\nconst getAttachmentFromFile = (file: File, name: string): Attachment => {\r\n    if (name === OmBarnetFormField.terminbekreftelse) {\r\n        return mapFileToAttachment(file, AttachmentType.TERMINBEKREFTELSE, Skjemanummer.TERMINBEKREFTELSE);\r\n    }\r\n    return mapFileToAttachment(file, AttachmentType.OMSORGSOVERTAKELSE, Skjemanummer.OMSORGSOVERTAKELSE);\r\n};\r\n\r\nconst getPendingAttachmentFromFile = (file: File, name: string): Attachment => {\r\n    const newAttachment = getAttachmentFromFile(file, name);\r\n    newAttachment.pending = true;\r\n    return newAttachment;\r\n};\r\n\r\nconst attachmentUploadHasFailed = ({ pending, uploaded, file: { name } }: Attachment): boolean =>\r\n    (!pending && !uploaded) || !fileExtensionIsValid(name);\r\n\r\nconst fileExtensionIsValid = (filename: string): boolean => {\r\n    const ext = filename.split('.').pop();\r\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\r\n};\r\n\r\nlet removeFn: FieldArrayRemoveFn;\r\n\r\nconst FormikFileUploader: React.FunctionComponent<Props> = ({ attachments, name, onFileInputClick, ...otherProps }) => {\r\n    const { values } = useFormikContext<OmBarnetFormData>();\r\n\r\n    async function uploadAttachment(attachment: Attachment) {\r\n        try {\r\n            const response = await AttachmentApi.saveAttachment(attachment);\r\n            attachment = setAttachmentPendingToFalse(attachment);\r\n            attachment.url = response.headers.location;\r\n            attachment.uploaded = true;\r\n            attachment.uuid = response.data;\r\n        } catch (error) {\r\n            setAttachmentPendingToFalse(attachment);\r\n        }\r\n    }\r\n\r\n    async function uploadAttachments(allAttachments: Attachment[], replaceFn: FieldArrayReplaceFn) {\r\n        for (const attachment of allAttachments) {\r\n            await uploadAttachment(attachment);\r\n            updateAttachmentListElement(allAttachments, attachment, replaceFn);\r\n        }\r\n\r\n        const failedAttachments = [...allAttachments.filter(attachmentUploadHasFailed)];\r\n        updateFailedAttachments(allAttachments, failedAttachments, replaceFn);\r\n    }\r\n\r\n    function updateFailedAttachments(\r\n        allAttachments: Attachment[],\r\n        failedAttachments: Attachment[],\r\n        replaceFn: FieldArrayReplaceFn\r\n    ) {\r\n        failedAttachments.forEach((attachment) => {\r\n            attachment = setAttachmentPendingToFalse(attachment);\r\n            updateAttachmentListElement(allAttachments, attachment, replaceFn);\r\n        });\r\n    }\r\n\r\n    function updateAttachmentListElement(atts: Attachment[], attachment: Attachment, replaceFn: FieldArrayReplaceFn) {\r\n        replaceFn(atts.indexOf(attachment), attachment);\r\n    }\r\n\r\n    function setAttachmentPendingToFalse(attachment: Attachment) {\r\n        attachment.pending = false;\r\n        return attachment;\r\n    }\r\n\r\n    function addPendingAttachmentToFieldArray(file: File, pushFn: FieldArrayPushFn) {\r\n        const attachment = getPendingAttachmentFromFile(file, name);\r\n        pushFn(attachment);\r\n        return attachment;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormikFileInput\r\n                name={name}\r\n                acceptedExtensions={VALID_EXTENSIONS.join(', ')}\r\n                onFilesSelect={async (files: File[], { push, replace, remove }: ArrayHelpers) => {\r\n                    removeFn = remove;\r\n                    const atts = files.map((file) => addPendingAttachmentToFieldArray(file, push));\r\n                    await uploadAttachments([...(values as any)[name], ...atts], replace);\r\n                }}\r\n                onClick={onFileInputClick}\r\n                {...otherProps}\r\n            />\r\n            <Block margin=\"xl\">\r\n                <AttachmentList\r\n                    attachments={attachments.filter((a) => !isAttachmentWithError(a))}\r\n                    showFileSize={true}\r\n                    onDelete={(file: Attachment) => {\r\n                        removeFn(attachments.indexOf(file));\r\n                    }}\r\n                />\r\n            </Block>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormikFileUploader;\r\n","import { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport Veileder from '@navikt/fp-common/lib/components/veileder/Veileder';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport dayjs from 'dayjs';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport { validateTerminDate, valideringAvTerminbekreftelsesdato } from '../omBarnetValidering';\r\n\r\ninterface Fødtprops {\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n}\r\n\r\nconst Termin: React.FunctionComponent<Fødtprops> = ({ visibility, formValues }) => {\r\n    const intl = useIntl();\r\n\r\n    if (formValues.erBarnetFødt === YesOrNo.YES || formValues.erBarnetFødt === YesOrNo.UNANSWERED) {\r\n        return null;\r\n    }\r\n    return (\r\n        <>\r\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\r\n                <>\r\n                    <Block margin=\"xl\">\r\n                        <OmBarnetFormComponents.RadioPanelGroup\r\n                            name={OmBarnetFormField.antallBarn}\r\n                            radios={[\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\r\n                                    value: '1',\r\n                                },\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\r\n                                    value: '2',\r\n                                },\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                                    value: '3',\r\n                                },\r\n                            ]}\r\n                            useTwoColumns={true}\r\n                            legend={getMessage(intl, 'omBarnet.text.antallBarn')}\r\n                        />\r\n                    </Block>\r\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\r\n                        <Block margin=\"xl\">\r\n                            <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                            </OmBarnetFormComponents.Select>\r\n                        </Block>\r\n                    )}\r\n                </>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.termindato) && (\r\n                <Block margin=\"xl\">\r\n                    <OmBarnetFormComponents.DatePicker\r\n                        name={OmBarnetFormField.termindato}\r\n                        label={getMessage(intl, 'søknad.termindato')}\r\n                        minDate={dayjs().subtract(3, 'week').toDate()}\r\n                        maxDate={dayjs().add(18, 'weeks').add(3, 'days').toDate()}\r\n                        validate={(value) => validateTerminDate(value, intl)}\r\n                        placeholder={'dd.mm.åååå'}\r\n                    />\r\n                </Block>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.terminbekreftelse) && (\r\n                <>\r\n                    <Block margin=\"xl\">\r\n                        <Veilederpanel kompakt={true} svg={<Veileder />}>\r\n                            {getMessage(intl, 'terminbekreftelsen.text.terminbekreftelsen')}\r\n                        </Veilederpanel>\r\n                    </Block>\r\n                    <Block margin=\"xl\">\r\n                        <FormikFileUploader\r\n                            attachments={formValues.terminbekreftelse || []}\r\n                            label={getMessage(intl, 'vedlegg.lastoppknapp.label')}\r\n                            name={OmBarnetFormField.terminbekreftelse}\r\n                        />\r\n                        <UtvidetInformasjon apneLabel={<FormattedMessage id=\"psg.åpneLabel\" />}>\r\n                            <PictureScanningGuide />\r\n                        </UtvidetInformasjon>\r\n                    </Block>\r\n                </>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.terminbekreftelsedato) && (\r\n                <Block margin=\"xl\">\r\n                    <OmBarnetFormComponents.DatePicker\r\n                        name={OmBarnetFormField.terminbekreftelsedato}\r\n                        label={getMessage(intl, 'søknad.terminbekreftelsesdato')}\r\n                        minDate={dayjs(formValues.termindato).subtract(18, 'week').subtract(3, 'day').toDate()}\r\n                        maxDate={dayjs().toDate()}\r\n                        validate={(terminBekreftelseDato) =>\r\n                            valideringAvTerminbekreftelsesdato(terminBekreftelseDato, formValues.termindato, intl)\r\n                        }\r\n                    />\r\n                </Block>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Termin;\r\n","import { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport Veileder from '@navikt/fp-common/lib/components/veileder/Veileder';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\r\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\r\nimport { Kjønn } from 'app/types/domain/Person';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport dayjs from 'dayjs';\r\nimport { FieldArray } from 'formik';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\r\nimport {\r\n    validateAdopsjonFødselDate,\r\n    validateEktefellensBarnAdopsjonDate,\r\n    validateOvertaOmsorgAdopsjonDate,\r\n} from '../omBarnetValidering';\r\n\r\ninterface Fødtprops {\r\n    formValues: OmBarnetFormData;\r\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\r\n    kjønn: Kjønn;\r\n}\r\n\r\nconst Adopsjon: React.FunctionComponent<Fødtprops> = ({ visibility, formValues, kjønn }) => {\r\n    const intl = useIntl();\r\n\r\n    if (formValues.adopsjonAvEktefellesBarn === YesOrNo.UNANSWERED) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {visibility.isVisible(OmBarnetFormField.adopsjonsdato) && (\r\n                <Block margin=\"xl\">\r\n                    <OmBarnetFormComponents.DatePicker\r\n                        name={OmBarnetFormField.adopsjonsdato}\r\n                        label={\r\n                            formValues.adopsjonAvEktefellesBarn === YesOrNo.YES\r\n                                ? getMessage(intl, 'omBarnet.adopsjon.spørsmål.stebarnsadopsjondato')\r\n                                : getMessage(intl, 'omBarnet.adopsjon.spørsmål.overtaomsorgdato')\r\n                        }\r\n                        minDate={dayjs().subtract(6, 'month').toDate()}\r\n                        validate={\r\n                            formValues.adopsjonAvEktefellesBarn === YesOrNo.YES\r\n                                ? (value) => validateEktefellensBarnAdopsjonDate(value, intl)\r\n                                : (value) => validateOvertaOmsorgAdopsjonDate(value, intl)\r\n                        }\r\n                        placeholder={'dd.mm.åååå'}\r\n                    />\r\n                </Block>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\r\n                <>\r\n                    <Block margin=\"xl\">\r\n                        <OmBarnetFormComponents.RadioPanelGroup\r\n                            name={OmBarnetFormField.antallBarn}\r\n                            radios={[\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\r\n                                    value: '1',\r\n                                },\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\r\n                                    value: '2',\r\n                                },\r\n                                {\r\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\r\n                                    value: '3',\r\n                                },\r\n                            ]}\r\n                            useTwoColumns={true}\r\n                            legend={getMessage(intl, 'omBarnet.adopsjon.spørsmål.antallBarnAdoptert')}\r\n                        />\r\n                    </Block>\r\n\r\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\r\n                        <Block margin=\"xl\">\r\n                            <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn}>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                            </OmBarnetFormComponents.Select>\r\n                        </Block>\r\n                    )}\r\n                </>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.fødselsdatoer) && (\r\n                <Block margin=\"xl\">\r\n                    <FieldArray\r\n                        name={OmBarnetFormField.fødselsdatoer}\r\n                        render={() =>\r\n                            [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\r\n                                return (\r\n                                    <Block padBottom=\"l\" key={`${index}`}>\r\n                                        <OmBarnetFormComponents.DatePicker\r\n                                            name={`${OmBarnetFormField.fødselsdatoer}.${index}` as OmBarnetFormField}\r\n                                            label={\r\n                                                formValues.antallBarn === '1'\r\n                                                    ? getMessage(intl, 'søknad.fødselsdato')\r\n                                                    : getMessage(\r\n                                                          intl,\r\n                                                          `omBarnet.adopsjon.spørsmål.fødselsdato.${index + 1}`\r\n                                                      )\r\n                                            }\r\n                                            minDate={dayjs().subtract(15, 'year').toDate()}\r\n                                            maxDate={dayjs().toDate()}\r\n                                            validate={(fødselsDatoer) =>\r\n                                                validateAdopsjonFødselDate(\r\n                                                    fødselsDatoer,\r\n                                                    formValues.adopsjonsdato,\r\n                                                    intl\r\n                                                )\r\n                                            }\r\n                                            placeholder={'dd.mm.åååå'}\r\n                                        />\r\n                                    </Block>\r\n                                );\r\n                            })\r\n                        }\r\n                    />\r\n                </Block>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.søkerAdopsjonAlene) && (\r\n                <Block margin=\"xl\">\r\n                    <OmBarnetFormComponents.YesOrNoQuestion\r\n                        name={OmBarnetFormField.søkerAdopsjonAlene}\r\n                        legend={getMessage(intl, 'omBarnet.adopsjon.spørsmål.adoptererDuAlene')}\r\n                        labels={{\r\n                            no: getMessage(intl, 'omBarnet.adopsjon.text.nei'),\r\n                            yes: getMessage(intl, 'omBarnet.adopsjon.text.ja'),\r\n                        }}\r\n                    />\r\n                </Block>\r\n            )}\r\n            {visibility.isVisible(OmBarnetFormField.omsorgsovertakelse) && (\r\n                <>\r\n                    <Block margin=\"xl\">\r\n                        <Veilederpanel kompakt={true} svg={<Veileder />}>\r\n                            {getMessage(intl, 'omBarnet.adopsjon.veilederpanel.adopsjon.text')}\r\n                        </Veilederpanel>\r\n                    </Block>\r\n                    <Block margin=\"xl\">\r\n                        <FormikFileUploader\r\n                            attachments={formValues.omsorgsovertakelse || []}\r\n                            label={getMessage(intl, 'vedlegg.lastoppknapp.label')}\r\n                            name={OmBarnetFormField.omsorgsovertakelse}\r\n                        />\r\n                        <UtvidetInformasjon apneLabel={<FormattedMessage id=\"psg.åpneLabel\" />}>\r\n                            <PictureScanningGuide />\r\n                        </UtvidetInformasjon>\r\n                    </Block>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Adopsjon;\r\n","import { bemUtils, Block, intlUtils, Step, useDocumentTitle } from '@navikt/fp-common';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport {\r\n    OmBarnetFormComponents,\r\n    OmBarnetFormField,\r\n    OmBarnetFormData,\r\n    initialOmBarnetValues,\r\n} from './omBarnetFormConfig';\r\nimport omBarnetQuestionsConfig from './omBarnetQuestionsConfig';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UnansweredQuestionsInfo, YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport stepConfig, { getPreviousStepHref } from 'app/step-config/stepConfig';\r\nimport { cleanupOmBarnet } from './omBarnetUtils';\r\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\r\nimport Født from './situasjon/Født';\r\nimport Termin from './situasjon/Termin';\r\n\r\nimport './omBarnet.less';\r\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport { PageKeys } from 'app/types/PageKeys';\r\nimport Adopsjon from './situasjon/Adopsjon';\r\nimport Person from 'app/types/domain/Person';\r\n\r\ninterface Props {\r\n    person: Person;\r\n}\r\n\r\nconst shouldResetInitialValues = (\r\n    situasjon: string,\r\n    erBarnetFødt: YesOrNo,\r\n    adopsjonAvEktefellesBarn: YesOrNo\r\n): boolean => {\r\n    if (\r\n        (situasjon === 'adopsjon' && erBarnetFødt !== YesOrNo.UNANSWERED) ||\r\n        (situasjon === 'fødsel' && adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nconst OmBarnet: React.FunctionComponent<Props> = ({ person }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('omBarnet');\r\n    const navigate = useNavigate();\r\n    useDocumentTitle(intlUtils(intl, 'søknad.omBarnet'));\r\n    const { state, dispatch } = useEngangsstønadContext();\r\n    const søkersituasjonValues = state.søknad.søkersituasjon;\r\n    const { omBarnet } = state.søknad;\r\n    const { situasjon } = søkersituasjonValues;\r\n    const initialValues = shouldResetInitialValues(situasjon!, omBarnet.erBarnetFødt, omBarnet.adopsjonAvEktefellesBarn)\r\n        ? initialOmBarnetValues\r\n        : omBarnet;\r\n\r\n    logAmplitudeEvent('sidevisning', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        pageKey: PageKeys.OmBarnet,\r\n    });\r\n\r\n    const onValidSubmit = (values: Partial<OmBarnetFormData>) => {\r\n        dispatch(\r\n            actionCreator.setOmBarnet({\r\n                erBarnetFødt: values.erBarnetFødt!,\r\n                adopsjonAvEktefellesBarn: values.adopsjonAvEktefellesBarn!,\r\n                antallBarn: values.antallBarn,\r\n                adopsjonsdato: values.adopsjonsdato,\r\n                søkerAdopsjonAlene: values.søkerAdopsjonAlene!,\r\n                fødselsdatoer: values.fødselsdatoer || [],\r\n                termindato: values.termindato,\r\n                terminbekreftelse: values.terminbekreftelse || [],\r\n                omsorgsovertakelse: values.omsorgsovertakelse || [],\r\n                terminbekreftelsedato: values.terminbekreftelsedato,\r\n            })\r\n        );\r\n        navigate('/soknad/utenlandsopphold');\r\n    };\r\n\r\n    return (\r\n        <OmBarnetFormComponents.FormikWrapper\r\n            initialValues={initialValues}\r\n            onSubmit={(values) => onValidSubmit(values)}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = omBarnetQuestionsConfig.getVisbility({\r\n                    ...formValues,\r\n                    situasjon: søkersituasjonValues.situasjon!,\r\n                    kjønn: person.kjønn,\r\n                });\r\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\r\n                return (\r\n                    <Step\r\n                        bannerTitle={getMessage(intl, 'søknad.pageheading')}\r\n                        activeStepId=\"omBarnet\"\r\n                        pageTitle={getMessage(intl, 'søknad.omBarnet')}\r\n                        stepTitle={getMessage(intl, 'søknad.omBarnet')}\r\n                        backLinkHref={getPreviousStepHref('omBarnet')}\r\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <OmBarnetFormComponents.Form\r\n                            includeButtons={false}\r\n                            cleanup={() => cleanupOmBarnet(formValues)}\r\n                            noButtonsContentRenderer={\r\n                                allQuestionsAnswered\r\n                                    ? undefined\r\n                                    : () => (\r\n                                          <UnansweredQuestionsInfo>\r\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\r\n                                          </UnansweredQuestionsInfo>\r\n                                      )\r\n                            }\r\n                        >\r\n                            <div className={bem.block}>\r\n                                {søkersituasjonValues.situasjon === 'adopsjon' ? (\r\n                                    <Block>\r\n                                        <OmBarnetFormComponents.YesOrNoQuestion\r\n                                            name={OmBarnetFormField.adopsjonAvEktefellesBarn}\r\n                                            legend={getMessage(intl, 'omBarnet.adopsjon.spørsmål.stebarnsadopsjon')}\r\n                                            labels={{\r\n                                                no: getMessage(intl, 'omBarnet.adopsjon.text.nei'),\r\n                                                yes: getMessage(intl, 'omBarnet.adopsjon.text.ja'),\r\n                                            }}\r\n                                        />\r\n                                    </Block>\r\n                                ) : (\r\n                                    <Block>\r\n                                        <OmBarnetFormComponents.YesOrNoQuestion\r\n                                            name={OmBarnetFormField.erBarnetFødt}\r\n                                            legend={getMessage(intl, 'omBarnet.spørsmål.nårErBarnetFødt')}\r\n                                            labels={{\r\n                                                no: getMessage(intl, 'omBarnet.radiobutton.fremtid'),\r\n                                                yes: getMessage(intl, 'omBarnet.radiobutton.fortid'),\r\n                                            }}\r\n                                        />\r\n                                    </Block>\r\n                                )}\r\n                                <Adopsjon visibility={visibility} formValues={formValues} kjønn={person.kjønn} />\r\n                                <Født visibility={visibility} formValues={formValues} />\r\n                                <Termin visibility={visibility} formValues={formValues} />\r\n\r\n                                {allQuestionsAnswered && (\r\n                                    <Block margin=\"xl\" textAlignCenter={true}>\r\n                                        <Hovedknapp>{getMessage(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                                    </Block>\r\n                                )}\r\n                            </div>\r\n                        </OmBarnetFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default OmBarnet;\r\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { OmBarnetFormData } from './omBarnetFormConfig';\r\n\r\nexport const cleanupOmBarnet = (formData: OmBarnetFormData): OmBarnetFormData => {\r\n    const cleanedData: Partial<OmBarnetFormData> = {};\r\n    cleanedData.antallBarn = undefined;\r\n    cleanedData.erBarnetFødt = YesOrNo.UNANSWERED;\r\n    cleanedData.adopsjonAvEktefellesBarn = YesOrNo.UNANSWERED;\r\n    cleanedData.søkerAdopsjonAlene = YesOrNo.UNANSWERED;\r\n\r\n    if (formData.erBarnetFødt === YesOrNo.YES) {\r\n        cleanedData.antallBarn = formData.antallBarn;\r\n        cleanedData.fødselsdatoer = formData.fødselsdatoer;\r\n        cleanedData.erBarnetFødt = formData.erBarnetFødt;\r\n    }\r\n    if (formData.erBarnetFødt === YesOrNo.NO) {\r\n        cleanedData.antallBarn = formData.antallBarn;\r\n        cleanedData.erBarnetFødt = formData.erBarnetFødt;\r\n        cleanedData.terminbekreftelse = formData.terminbekreftelse;\r\n        cleanedData.terminbekreftelsedato = formData.terminbekreftelsedato;\r\n        cleanedData.termindato = formData.termindato;\r\n    }\r\n    if (formData.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\r\n        cleanedData.antallBarn = formData.antallBarn;\r\n        cleanedData.adopsjonsdato = formData.adopsjonsdato;\r\n        cleanedData.fødselsdatoer = formData.fødselsdatoer;\r\n        cleanedData.omsorgsovertakelse = formData.omsorgsovertakelse;\r\n        cleanedData.adopsjonAvEktefellesBarn = formData.adopsjonAvEktefellesBarn;\r\n        cleanedData.søkerAdopsjonAlene = formData.søkerAdopsjonAlene;\r\n    }\r\n    return cleanedData as OmBarnetFormData;\r\n};\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { UtenlandsoppholdFormData, UtenlandsoppholdFieldNames } from './utenlandsoppholdFormTypes';\r\n\r\nconst UtenlandsoppholdFormConfig: QuestionConfig<UtenlandsoppholdFormData, UtenlandsoppholdFieldNames> = {\r\n    [UtenlandsoppholdFieldNames.harBoddUtenforNorgeSiste12Mnd]: {\r\n        isAnswered: ({ harBoddUtenforNorgeSiste12Mnd }) => harBoddUtenforNorgeSiste12Mnd !== YesOrNo.UNANSWERED,\r\n        isIncluded: () => true,\r\n        visibilityFilter: ({ skalBoUtenforNorgeNeste12Mnd }) => skalBoUtenforNorgeNeste12Mnd !== YesOrNo.UNANSWERED,\r\n    },\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: {\r\n        isAnswered: ({ utenlandsoppholdSiste12Mnd }) => utenlandsoppholdSiste12Mnd.length > 0,\r\n        isOptional: () => true,\r\n        isIncluded: ({ harBoddUtenforNorgeSiste12Mnd }) => harBoddUtenforNorgeSiste12Mnd === YesOrNo.YES,\r\n    },\r\n    [UtenlandsoppholdFieldNames.skalBoUtenforNorgeNeste12Mnd]: {\r\n        isAnswered: ({ skalBoUtenforNorgeNeste12Mnd }) => skalBoUtenforNorgeNeste12Mnd !== YesOrNo.UNANSWERED,\r\n        isIncluded: () => true,\r\n    },\r\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: {\r\n        isAnswered: ({ utenlandsoppholdNeste12Mnd }) => utenlandsoppholdNeste12Mnd.length > 0,\r\n        isOptional: () => true,\r\n        isIncluded: ({ skalBoUtenforNorgeNeste12Mnd }) => skalBoUtenforNorgeNeste12Mnd === YesOrNo.YES,\r\n    },\r\n};\r\n\r\nexport const utenlandsoppholdFormQuestions = Questions<UtenlandsoppholdFormData, UtenlandsoppholdFieldNames>(\r\n    UtenlandsoppholdFormConfig\r\n);\r\n","import {\r\n    date1YearAgo,\r\n    date1YearFromNow,\r\n    dateRangesCollide,\r\n    dateRangesExceedsRange,\r\n    formatDateExtended,\r\n    intlUtils,\r\n} from '@navikt/fp-common';\r\nimport dayjs from 'dayjs';\r\nimport { BostedUtland } from './bostedUtlandListAndDialog/types';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport { IntlShape } from 'react-intl';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst dateIsWithinRange = (date: Date, minDate: Date, maxDate: Date) => {\r\n    return dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\r\n};\r\n\r\nconst validateDateInRange = (\r\n    intl: IntlShape,\r\n    date: Date | undefined,\r\n    minDate: Date,\r\n    maxDate: Date,\r\n    isFomDate: boolean\r\n) => {\r\n    if (date === undefined) {\r\n        if (isFomDate) {\r\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\r\n        }\r\n\r\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\r\n    }\r\n\r\n    if (!dateIsWithinRange(date, minDate, maxDate)) {\r\n        return intlUtils(intl, 'valideringsfeil.dateOutsideRange', {\r\n            fom: formatDateExtended(minDate),\r\n            tom: formatDateExtended(maxDate),\r\n        });\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\nconst validateFromDate = (intl: IntlShape, date: Date | undefined, minDate: Date, maxDate: Date, toDate?: Date) => {\r\n    const error = validateDateInRange(intl, date, minDate, maxDate, true);\r\n    if (error !== undefined) {\r\n        return error;\r\n    }\r\n    if (toDate && dayjs(date).isAfter(toDate, 'day')) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsopphold.førTilDato');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nconst validateToDate = (intl: IntlShape, date: Date | undefined, minDate: Date, maxDate: Date, fromDate?: Date) => {\r\n    const error = validateDateInRange(intl, date, minDate, maxDate, false);\r\n    if (error !== undefined) {\r\n        return error;\r\n    }\r\n    if (fromDate && dayjs(date).isBefore(fromDate, 'day')) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsopphold.etterFraDato');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const dateRangeValidation = {\r\n    validateToDate,\r\n    validateFromDate,\r\n};\r\n\r\nexport const validateUtenlandsoppholdNeste12Mnd = (utenlandsopphold: BostedUtland[], intl: IntlShape) => {\r\n    if (utenlandsopphold.length === 0) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsopphold.neste12Måneder.ikkeRegistrert');\r\n    }\r\n\r\n    const dateRanges = utenlandsopphold.map((u) => ({ from: dayjs(u.fom).toDate(), to: dayjs(u.tom).toDate() }));\r\n\r\n    if (dateRangesCollide(dateRanges)) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapp');\r\n    }\r\n    if (dateRangesExceedsRange(dateRanges, { from: new Date(), to: date1YearFromNow })) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsoppholdUtenforPeriode');\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const validateUtenlandsoppholdSiste12Mnd = (utenlandsopphold: BostedUtland[], intl: IntlShape) => {\r\n    if (utenlandsopphold.length === 0) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsopphold.siste12Måneder.ikkeRegistrert');\r\n    }\r\n\r\n    const dateRanges = utenlandsopphold.map((u) => ({ from: dayjs(u.fom).toDate(), to: dayjs(u.tom).toDate() }));\r\n\r\n    if (dateRangesCollide(dateRanges)) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapp');\r\n    }\r\n    if (dateRangesExceedsRange(dateRanges, { from: date1YearAgo, to: new Date() })) {\r\n        return intlUtils(intl, 'valideringsfeil.utenlandsoppholdUtenforPeriode');\r\n    }\r\n\r\n    return undefined;\r\n};\r\n","import React from 'react';\r\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\r\nimport { getTypedFormComponents, ISOStringToDate, NavFrontendSkjemaFeil } from '@navikt/sif-common-formik/lib';\r\nimport { Systemtittel } from 'nav-frontend-typografi';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { BostedUtland, isValidBostedUtland } from './types';\r\nimport { Block, intlUtils } from '@navikt/fp-common';\r\nimport { dateRangeValidation } from '../utenlandsoppholdValidering';\r\n\r\nexport const commonFieldErrorRenderer = (intl: IntlShape, error: any): NavFrontendSkjemaFeil => {\r\n    if (typeof error === 'object' && error.key !== undefined) {\r\n        return intl.formatMessage({ id: error.key }, error.values);\r\n    }\r\n    if (typeof error === 'string') {\r\n        return error;\r\n    }\r\n    return error !== undefined;\r\n};\r\n\r\nexport interface BostedUtlandFormLabels {\r\n    tittel: string;\r\n}\r\n\r\ninterface Props {\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    bosted?: BostedUtland;\r\n    onSubmit: (values: BostedUtland) => void;\r\n    onCancel: () => void;\r\n    erFremtidigOpphold: boolean;\r\n}\r\n\r\nenum BostedUtlandFormFields {\r\n    fom = 'fom',\r\n    tom = 'tom',\r\n    landkode = 'landkode',\r\n}\r\n\r\ntype FormValues = Partial<{\r\n    [BostedUtlandFormFields.fom]: string;\r\n    [BostedUtlandFormFields.tom]: string;\r\n    [BostedUtlandFormFields.landkode]: string;\r\n}>;\r\n\r\nconst Form = getTypedFormComponents<BostedUtlandFormFields, FormValues>();\r\n\r\nconst mapBostedToFormValues = (bosted: BostedUtland): FormValues => {\r\n    return {\r\n        fom: bosted.fom,\r\n        tom: bosted.tom,\r\n        landkode: bosted.landkode,\r\n    };\r\n};\r\n\r\nconst BostedUtlandForm: React.FunctionComponent<Props> = ({\r\n    maxDate,\r\n    minDate,\r\n    bosted,\r\n    onSubmit,\r\n    onCancel,\r\n    erFremtidigOpphold,\r\n}) => {\r\n    const intl = useIntl();\r\n    const onFormikSubmit = (formValues: FormValues) => {\r\n        const updatedBosted: Partial<BostedUtland> = {\r\n            ...bosted,\r\n            fom: formValues.fom,\r\n            tom: formValues.tom,\r\n            landkode: formValues.landkode,\r\n        };\r\n        if (isValidBostedUtland(updatedBosted)) {\r\n            onSubmit(updatedBosted);\r\n        } else {\r\n            throw new Error('BostedUtlandForm: Formvalues is not a valid BostedUtland on submit.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form.FormikWrapper\r\n            initialValues={bosted ? mapBostedToFormValues(bosted) : {}}\r\n            onSubmit={onFormikSubmit}\r\n            renderForm={({ values }) => {\r\n                return (\r\n                    <Form.Form onCancel={onCancel}>\r\n                        <Systemtittel tag=\"h1\">\r\n                            <FormattedMessage id={'utenlandsopphold.leggTilUtenlandsopphold.tittel'} />\r\n                        </Systemtittel>\r\n                        <Block>\r\n                            <Form.DateIntervalPicker\r\n                                legend={getMessage(intl, 'utenlandsopphold.leggTilUtenlandsopphold.tidsrom')}\r\n                                fromDatepickerProps={{\r\n                                    name: BostedUtlandFormFields.fom,\r\n                                    label: getMessage(intl, 'utenlandsopphold.leggTilUtenlandsopphold.fraogmed'),\r\n                                    fullscreenOverlay: true,\r\n                                    placeholder: 'dd.mm.åååå',\r\n                                    minDate,\r\n                                    invalidFormatError: 'valideringsfeil.fraOgMedDato.gyldigDato',\r\n                                    maxDate: ISOStringToDate(values.tom) || maxDate,\r\n                                    validate: (value) =>\r\n                                        dateRangeValidation.validateFromDate(\r\n                                            intl,\r\n                                            ISOStringToDate(value),\r\n                                            minDate,\r\n                                            maxDate,\r\n                                            ISOStringToDate(values.tom)\r\n                                        ),\r\n                                }}\r\n                                toDatepickerProps={{\r\n                                    name: BostedUtlandFormFields.tom,\r\n                                    label: getMessage(intl, 'utenlandsopphold.leggTilUtenlandsopphold.tilogmed'),\r\n                                    fullscreenOverlay: true,\r\n                                    placeholder: 'dd.mm.åååå',\r\n                                    minDate: ISOStringToDate(values.fom) || minDate,\r\n                                    maxDate,\r\n                                    invalidFormatError: 'valideringsfeil.tilOgMedDato.gyldigDato',\r\n                                    validate: (value) =>\r\n                                        dateRangeValidation.validateToDate(\r\n                                            intl,\r\n                                            ISOStringToDate(value),\r\n                                            minDate,\r\n                                            maxDate,\r\n                                            ISOStringToDate(values.fom)\r\n                                        ),\r\n                                }}\r\n                            />\r\n                        </Block>\r\n                        <Block margin=\"xl\">\r\n                            <Form.CountrySelect\r\n                                name={BostedUtlandFormFields.landkode}\r\n                                label={\r\n                                    erFremtidigOpphold\r\n                                        ? getMessage(\r\n                                              intl,\r\n                                              'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandSkalDuBoI'\r\n                                          )\r\n                                        : getMessage(\r\n                                              intl,\r\n                                              'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandHarDuBoddI'\r\n                                          )\r\n                                }\r\n                                validate={(country) => {\r\n                                    if (country === '' || !country) {\r\n                                        return erFremtidigOpphold\r\n                                            ? intlUtils(\r\n                                                  intl,\r\n                                                  'valideringsfeil.leggTilUtenlandsopphold.landDuSkalBoIPåkreved'\r\n                                              )\r\n                                            : intlUtils(\r\n                                                  intl,\r\n                                                  'valideringsfeil.leggTilUtenlandsopphold.landDuHarBoddIPåkrevd'\r\n                                              );\r\n                                    }\r\n                                }}\r\n                                useAlpha3Code={false}\r\n                            />\r\n                        </Block>\r\n                    </Form.Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BostedUtlandForm;\r\n","export interface BostedUtland {\r\n    id?: string;\r\n    fom: string;\r\n    tom: string;\r\n    landkode: string;\r\n}\r\n\r\nexport const isValidBostedUtland = (bosted: Partial<BostedUtland>): bosted is BostedUtland => {\r\n    const { fom, landkode, tom } = bosted;\r\n    return fom !== undefined && landkode !== undefined && tom !== undefined;\r\n};\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { getCountryName } from '@navikt/sif-common-formik';\r\nimport { BostedUtland } from './types';\r\nimport { ActionLink, bemUtils, formatDateExtended, ItemList } from '@navikt/fp-common';\r\n\r\nimport dayjs from 'dayjs';\r\n\r\nimport './bostedUtlandList.less';\r\n\r\ninterface Props {\r\n    bosteder: BostedUtland[];\r\n    onEdit?: (opphold: BostedUtland) => void;\r\n    onDelete?: (opphold: BostedUtland) => void;\r\n}\r\n\r\nconst bem = bemUtils('bostedUtlandList');\r\n\r\nconst BostedUtlandList: React.FunctionComponent<Props> = ({ bosteder, onDelete, onEdit }) => {\r\n    const intl = useIntl();\r\n    const renderBostedUtlandLabel = (opphold: BostedUtland): React.ReactNode => {\r\n        const navn = getCountryName(opphold.landkode, intl.locale);\r\n        return (\r\n            <div className={bem.element('label')}>\r\n                <span className={bem.element('land')}>\r\n                    {onEdit && <ActionLink onClick={() => onEdit(opphold)}>{navn}</ActionLink>}\r\n                    {!onEdit && <span>{navn}</span>}\r\n                </span>\r\n                <span className={bem.element('dato')}>\r\n                    {formatDateExtended(dayjs(opphold.fom).toDate())} -{' '}\r\n                    {formatDateExtended(dayjs(opphold.tom).toDate())}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ItemList<BostedUtland>\r\n            getItemId={(opphold: BostedUtland) => opphold.id}\r\n            getItemTitle={(opphold: BostedUtland) => getCountryName(opphold.landkode, intl.locale)}\r\n            onDelete={onDelete}\r\n            onEdit={onEdit}\r\n            labelRenderer={renderBostedUtlandLabel}\r\n            items={bosteder}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BostedUtlandList;\r\n","import React from 'react';\r\nimport { FormikModalFormAndList, ModalFormAndListLabels } from '@navikt/sif-common-formik';\r\nimport BostedUtlandForm from './BostedUtlandForm';\r\nimport BostedUtlandListe from './BostedUtlandList';\r\nimport { BostedUtland } from './types';\r\nimport { sortItemsByFom } from '@navikt/fp-common';\r\n\r\ninterface Props<FieldNames> {\r\n    name: FieldNames;\r\n    validate?: any;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    labels: ModalFormAndListLabels;\r\n    erFremtidigOpphold: boolean;\r\n}\r\n\r\nfunction BostedUtlandListAndDialog<FieldNames>({\r\n    name,\r\n    minDate,\r\n    maxDate,\r\n    validate,\r\n    labels,\r\n    erFremtidigOpphold,\r\n}: Props<FieldNames>) {\r\n    return (\r\n        <FormikModalFormAndList<FieldNames, BostedUtland, string>\r\n            name={name}\r\n            labels={labels}\r\n            validate={validate}\r\n            dialogWidth=\"narrow\"\r\n            sortFunc={sortItemsByFom}\r\n            formRenderer={({ onSubmit, onCancel, item }) => (\r\n                <BostedUtlandForm\r\n                    bosted={item}\r\n                    minDate={minDate}\r\n                    maxDate={maxDate}\r\n                    onSubmit={onSubmit}\r\n                    onCancel={onCancel}\r\n                    erFremtidigOpphold={erFremtidigOpphold}\r\n                />\r\n            )}\r\n            listRenderer={({ items, onEdit, onDelete }) => (\r\n                <BostedUtlandListe bosteder={items} onEdit={onEdit} onDelete={onDelete} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default BostedUtlandListAndDialog;\r\n","import React from 'react';\r\nimport {\r\n    bemUtils,\r\n    Block,\r\n    date1YearAgo,\r\n    date1YearFromNow,\r\n    dateToday,\r\n    intlUtils,\r\n    Step,\r\n    UtvidetInformasjon,\r\n    validateYesOrNoIsAnswered,\r\n} from '@navikt/fp-common';\r\nimport { UnansweredQuestionsInfo } from '@navikt/sif-common-formik/lib';\r\nimport {\r\n    UtenlandsoppholdFieldNames,\r\n    UtenlandsoppholdFormComponents,\r\n    UtenlandsoppholdFormData,\r\n} from './utenlandsoppholdFormTypes';\r\nimport { useIntl } from 'react-intl';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport stepConfig, { getPreviousStepHref } from 'app/step-config/stepConfig';\r\nimport { utenlandsoppholdFormQuestions } from './utenlandsoppholdFormQuestions';\r\nimport BostedUtlandListAndDialog from './bostedUtlandListAndDialog/BostedUtlandListAndDialog';\r\nimport { utenlandsoppholdFormCleanup } from './utenlandsoppholdFormUtils';\r\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\r\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { validateUtenlandsoppholdNeste12Mnd, validateUtenlandsoppholdSiste12Mnd } from './utenlandsoppholdValidering';\r\n\r\nimport './utenlandsopphold.less';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport { PageKeys } from 'app/types/PageKeys';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BostedUtland } from './bostedUtlandListAndDialog/types';\r\n\r\nconst Utenlandsopphold: React.FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('utenlandsopphold');\r\n    const navigate = useNavigate();\r\n\r\n    const { state, dispatch } = useEngangsstønadContext();\r\n    const initialValues = state.søknad.utenlandsopphold;\r\n\r\n    logAmplitudeEvent('sidevisning', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        pageKey: PageKeys.Utenlandsopphold,\r\n    });\r\n\r\n    const onValidSubmit = (values: Partial<UtenlandsoppholdFormData>) => {\r\n        dispatch(\r\n            actionCreator.setUtenlandsopphold({\r\n                skalBoUtenforNorgeNeste12Mnd: values.skalBoUtenforNorgeNeste12Mnd!,\r\n                harBoddUtenforNorgeSiste12Mnd: values.harBoddUtenforNorgeSiste12Mnd!,\r\n                utenlandsoppholdNeste12Mnd: values.utenlandsoppholdNeste12Mnd || [],\r\n                utenlandsoppholdSiste12Mnd: values.utenlandsoppholdSiste12Mnd || [],\r\n            })\r\n        );\r\n        navigate('/soknad/oppsummering');\r\n    };\r\n\r\n    return (\r\n        <UtenlandsoppholdFormComponents.FormikWrapper\r\n            initialValues={initialValues}\r\n            onSubmit={(values) => onValidSubmit(values)}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = utenlandsoppholdFormQuestions.getVisbility(formValues);\r\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\r\n                return (\r\n                    <Step\r\n                        bannerTitle={getMessage(intl, 'søknad.pageheading')}\r\n                        activeStepId=\"utenlandsopphold\"\r\n                        pageTitle={getMessage(intl, 'søknad.utenlandsopphold')}\r\n                        stepTitle={getMessage(intl, 'søknad.utenlandsopphold')}\r\n                        backLinkHref={getPreviousStepHref('utenlandsopphold')}\r\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <UtenlandsoppholdFormComponents.Form\r\n                            includeButtons={allQuestionsAnswered}\r\n                            includeValidationSummary={true}\r\n                            submitButtonLabel={getMessage(intl, 'søknad.gåVidere')}\r\n                            cleanup={(values) => utenlandsoppholdFormCleanup(values)}\r\n                            noButtonsContentRenderer={\r\n                                allQuestionsAnswered\r\n                                    ? undefined\r\n                                    : () => (\r\n                                          <UnansweredQuestionsInfo>\r\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\r\n                                          </UnansweredQuestionsInfo>\r\n                                      )\r\n                            }\r\n                        >\r\n                            <div className={bem.block}>\r\n                                {visibility.isVisible(UtenlandsoppholdFieldNames.skalBoUtenforNorgeNeste12Mnd) && (\r\n                                    <Block>\r\n                                        <UtenlandsoppholdFormComponents.YesOrNoQuestion\r\n                                            legend={intlUtils(intl, 'utenlandsopphold.neste12Måneder.spørsmål')}\r\n                                            name={UtenlandsoppholdFieldNames.skalBoUtenforNorgeNeste12Mnd}\r\n                                            description={\r\n                                                <UtvidetInformasjon\r\n                                                    apneLabel={intlUtils(\r\n                                                        intl,\r\n                                                        'utenlandsopphold.neste12MånederInfotekst.apneLabel'\r\n                                                    )}\r\n                                                >\r\n                                                    {intlUtils(intl, 'utenlandsopphold.neste12MånederInfotekst')}\r\n                                                </UtvidetInformasjon>\r\n                                            }\r\n                                            labels={{\r\n                                                no: intlUtils(\r\n                                                    intl,\r\n                                                    'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddINorge'\r\n                                                ),\r\n                                                yes: intlUtils(\r\n                                                    intl,\r\n                                                    'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddIUtlandet'\r\n                                                ),\r\n                                            }}\r\n                                            validate={validateYesOrNoIsAnswered}\r\n                                        />\r\n                                    </Block>\r\n                                )}\r\n                                {visibility.isVisible(UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd) && (\r\n                                    <Block margin=\"l\">\r\n                                        <BostedUtlandListAndDialog<UtenlandsoppholdFieldNames>\r\n                                            name={UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd}\r\n                                            minDate={dateToday}\r\n                                            maxDate={date1YearFromNow}\r\n                                            labels={{\r\n                                                addLabel: intlUtils(intl, 'utenlandsopphold.knapp.leggTilLand'),\r\n                                                modalTitle: 'Utenlandsopphold neste 12 måneder',\r\n                                            }}\r\n                                            erFremtidigOpphold={true}\r\n                                            validate={(value: BostedUtland[]) =>\r\n                                                validateUtenlandsoppholdNeste12Mnd(value, intl)\r\n                                            }\r\n                                        />\r\n                                    </Block>\r\n                                )}\r\n                                {visibility.isVisible(UtenlandsoppholdFieldNames.harBoddUtenforNorgeSiste12Mnd) && (\r\n                                    <Block margin=\"xl\">\r\n                                        <UtenlandsoppholdFormComponents.YesOrNoQuestion\r\n                                            legend={intlUtils(intl, 'utenlandsopphold.siste12Måneder.spørsmål')}\r\n                                            name={UtenlandsoppholdFieldNames.harBoddUtenforNorgeSiste12Mnd}\r\n                                            description={\r\n                                                <UtvidetInformasjon\r\n                                                    apneLabel={intlUtils(\r\n                                                        intl,\r\n                                                        'utenlandsopphold.siste12MånederInfotekst.apneLabel'\r\n                                                    )}\r\n                                                >\r\n                                                    {intlUtils(intl, 'utenlandsopphold.siste12MånederInfotekst')}\r\n                                                </UtvidetInformasjon>\r\n                                            }\r\n                                            labels={{\r\n                                                no: intlUtils(\r\n                                                    intl,\r\n                                                    'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddINorge'\r\n                                                ),\r\n                                                yes: intlUtils(\r\n                                                    intl,\r\n                                                    'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddIUtlandet'\r\n                                                ),\r\n                                            }}\r\n                                            validate={validateYesOrNoIsAnswered}\r\n                                        />\r\n                                    </Block>\r\n                                )}\r\n                                {visibility.isVisible(UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd) && (\r\n                                    <Block margin=\"l\">\r\n                                        <BostedUtlandListAndDialog<UtenlandsoppholdFieldNames>\r\n                                            minDate={date1YearAgo}\r\n                                            maxDate={dateToday}\r\n                                            name={UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd}\r\n                                            labels={{\r\n                                                addLabel: intlUtils(intl, 'utenlandsopphold.knapp.leggTilLand'),\r\n                                                modalTitle: 'Utenlandsopphold siste 12 måneder',\r\n                                            }}\r\n                                            erFremtidigOpphold={false}\r\n                                            validate={(value: BostedUtland[]) =>\r\n                                                validateUtenlandsoppholdSiste12Mnd(value, intl)\r\n                                            }\r\n                                        />\r\n                                    </Block>\r\n                                )}\r\n                            </div>\r\n                        </UtenlandsoppholdFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Utenlandsopphold;\r\n","import { UtenlandsoppholdFormData } from './utenlandsoppholdFormTypes';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\n\r\nexport const utenlandsoppholdFormCleanup = (formValues: UtenlandsoppholdFormData): UtenlandsoppholdFormData => {\r\n    const {\r\n        harBoddUtenforNorgeSiste12Mnd,\r\n        skalBoUtenforNorgeNeste12Mnd,\r\n        utenlandsoppholdNeste12Mnd,\r\n        utenlandsoppholdSiste12Mnd,\r\n    } = formValues;\r\n\r\n    return {\r\n        harBoddUtenforNorgeSiste12Mnd,\r\n        skalBoUtenforNorgeNeste12Mnd,\r\n        utenlandsoppholdNeste12Mnd: skalBoUtenforNorgeNeste12Mnd === YesOrNo.YES ? utenlandsoppholdNeste12Mnd : [],\r\n        utenlandsoppholdSiste12Mnd: harBoddUtenforNorgeSiste12Mnd === YesOrNo.YES ? utenlandsoppholdSiste12Mnd : [],\r\n    };\r\n};\r\n","import * as React from 'react';\r\n\r\nexport interface IconRef {\r\n    id: string;\r\n    viewBox: string;\r\n}\r\n\r\ninterface Props {\r\n    iconRef: IconRef;\r\n    size?: number;\r\n    className?: string;\r\n}\r\n\r\nconst CustomSVGFromSprite: React.FunctionComponent<Props> = ({ iconRef, size, className, ...other }) => {\r\n    const viewBox = { 'view-box': iconRef.viewBox };\r\n    return (\r\n        <svg className={className} height={size} width={size} {...viewBox} {...other}>\r\n            <use xlinkHref={`#${iconRef.id}`} />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default CustomSVGFromSprite;\r\n","import * as React from 'react';\r\nconst { Normaltekst, Undertittel } = require('nav-frontend-typografi');\r\n\r\nimport './søkersPersonalia.less';\r\nimport CustomSVG from 'common/components/custom-svg/CustomSVG';\r\nimport { Kjønn } from 'app/types/domain/Person';\r\n\r\nconst womanSvg = require('../../assets/svg/kvinne.svg').default;\r\nconst manSvg = require('../../assets/svg/mann.svg').default;\r\n\r\ninterface Props {\r\n    navn: string;\r\n    kjønn: Kjønn;\r\n    personnummer: string;\r\n}\r\n\r\nconst SøkersPersonalia: React.FunctionComponent<Props> = ({ navn, kjønn, personnummer }) => (\r\n    <div className=\"søkersPersonalia\">\r\n        <CustomSVG iconRef={kjønn === 'K' ? womanSvg : manSvg} size={40} />\r\n        <div className=\"søkersPersonalia__label\">\r\n            <Undertittel className=\"søkersPersonalia__name capitalizeName\">{navn}</Undertittel>\r\n            <Normaltekst className=\"søkersPersonalia__person\">{personnummer}</Normaltekst>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default SøkersPersonalia;\r\n","import React, { ReactNode } from 'react';\r\nimport Ekspanderbartpanel from 'nav-frontend-ekspanderbartpanel';\r\nimport { Block } from '@navikt/fp-common';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\n\r\ninterface Props {\r\n    tittel: string;\r\n    children: ReactNode;\r\n}\r\n\r\nconst Oppsummeringspunkt = ({ tittel, children }: Props) => (\r\n    <Block margin=\"xl\">\r\n        <Ekspanderbartpanel apen={false} tittel={<Undertittel>{tittel}</Undertittel>}>\r\n            {children}\r\n        </Ekspanderbartpanel>\r\n    </Block>\r\n);\r\n\r\nexport default Oppsummeringspunkt;\r\n","export const fullNameFormat = (fornavn: string, mellomnavn: string, etternavn: string) => {\r\n    if (mellomnavn) {\r\n        return `${fornavn} ${mellomnavn} ${etternavn}`;\r\n    }\r\n    return `${fornavn} ${etternavn}`;\r\n};\r\n\r\nexport default {\r\n    fullNameFormat\r\n};\r\n","import * as React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport './labeltekst.less';\r\n\r\ntype MessageValue = string | number | boolean | Date | null | undefined;\r\n\r\ninterface OwnProps {\r\n    children?: React.ReactNode;\r\n    intlId?: string;\r\n    intlValue?: { [key: string]: MessageValue };\r\n}\r\n\r\nexport type Props = OwnProps;\r\n\r\nconst Labeltekst: React.FunctionComponent<Props> = ({ children, intlId, intlValue }) => {\r\n    const intl = useIntl();\r\n\r\n    return <span className=\"labeltext\">{intlId ? intl.formatMessage({ id: intlId }, intlValue) : children}</span>;\r\n};\r\n\r\nexport default Labeltekst;\r\n","import * as React from 'react';\r\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport { useIntl } from 'react-intl';\r\nimport { isAttachmentWithError } from 'common/storage/attachment/components/util';\r\nimport AttachmentList from 'common/storage/attachment/components/AttachmentList';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { Block, DisplayTextWithLabel, formatDate } from '@navikt/fp-common';\r\nimport Labeltekst from 'common/components/labeltekst/Labeltekst';\r\n\r\ninterface Props {\r\n    barn: OmBarnetFormData;\r\n}\r\n\r\nconst OmBarnetOppsummering: React.FunctionComponent<Props> = ({ barn }) => {\r\n    const intl = useIntl();\r\n\r\n    let antallBarnSummaryText;\r\n    if (barn.antallBarn === '1') {\r\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.ettBarn');\r\n    } else if (barn.antallBarn === '2' && barn.adopsjonAvEktefellesBarn === YesOrNo.UNANSWERED) {\r\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.tvillinger');\r\n    } else if (barn.antallBarn === '2' && barn.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\r\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.toBarn');\r\n    } else {\r\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.flereBarn', {\r\n            antall: barn.antallBarn,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Block>\r\n            <DisplayTextWithLabel\r\n                label={getMessage(intl, 'oppsummering.text.soknadenGjelder')}\r\n                text={antallBarnSummaryText}\r\n            />\r\n            {barn.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && (\r\n                <div>\r\n                    <DisplayTextWithLabel\r\n                        label={getMessage(intl, 'oppsummering.text.medAdopsjonsdato')}\r\n                        text={formatDate(barn.adopsjonsdato!)}\r\n                    />\r\n\r\n                    <Element className=\"textWithLabel__label\">\r\n                        {barn.fødselsdatoer.length > 1\r\n                            ? getMessage(intl, 'oppsummering.text.medFødselsdatoer')\r\n                            : getMessage(intl, 'oppsummering.text.medFødselsdato')}\r\n                    </Element>\r\n                    <Block margin=\"l\" padBottom=\"l\">\r\n                        {barn.fødselsdatoer.map((_, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <Labeltekst>{formatDate(barn.fødselsdatoer![index])}</Labeltekst>\r\n                                    <br />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Block>\r\n                </div>\r\n            )}\r\n            {barn.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && (\r\n                <div className=\"oppsummering__attachments\">\r\n                    <Element className=\"textWithLabel__label\">\r\n                        {getMessage(intl, 'oppsummering.text.vedlagtOmsorgsovertakelseBekreftelse')}\r\n                    </Element>\r\n                    <AttachmentList\r\n                        attachments={barn.omsorgsovertakelse.filter((a: Attachment) => !isAttachmentWithError(a))}\r\n                    />\r\n                </div>\r\n            )}\r\n            {barn.erBarnetFødt === YesOrNo.YES && (\r\n                <DisplayTextWithLabel\r\n                    label={getMessage(intl, 'oppsummering.text.medFødselsdato')}\r\n                    text={formatDate(barn.fødselsdatoer[0])}\r\n                />\r\n            )}\r\n            {barn.erBarnetFødt === YesOrNo.NO && barn.termindato && barn.terminbekreftelsedato && (\r\n                <div>\r\n                    <DisplayTextWithLabel\r\n                        label={getMessage(intl, 'oppsummering.text.medTermindato')}\r\n                        text={formatDate(barn.termindato)}\r\n                    />\r\n                    <div className=\"oppsummering__attachments\">\r\n                        <Element className=\"textWithLabel__label\">\r\n                            {getMessage(intl, 'oppsummering.text.vedlagtTerminbekreftelse')}\r\n                        </Element>\r\n                        <AttachmentList\r\n                            attachments={barn.terminbekreftelse.filter((a: Attachment) => !isAttachmentWithError(a))}\r\n                        />\r\n                    </div>\r\n                    <DisplayTextWithLabel\r\n                        label={getMessage(intl, 'oppsummering.text.somErDatert')}\r\n                        text={formatDate(barn.terminbekreftelsedato)}\r\n                    />\r\n                </div>\r\n            )}\r\n        </Block>\r\n    );\r\n};\r\nexport default OmBarnetOppsummering;\r\n","import React from 'react';\r\nimport { BostedUtland } from 'app/steps/utenlandsopphold/bostedUtlandListAndDialog/types';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport * as countries from 'i18n-iso-countries';\r\n\r\nimport './landOppsummering.less';\r\nimport { formatDate } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    utenlandsoppholdListe: BostedUtland[];\r\n}\r\n\r\nconst LandOppsummering: React.FunctionComponent<Props> = ({ utenlandsoppholdListe }) => (\r\n    <ul className=\"landOppsummering\">\r\n        {utenlandsoppholdListe.map((opphold: BostedUtland) => (\r\n            <div key={`${opphold.landkode}${opphold.fom}`} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Element>{countries.getName(opphold.landkode, 'nb')}</Element>\r\n                <Element>\r\n                    {formatDate(opphold.fom)} - {formatDate(opphold.tom)}\r\n                </Element>\r\n            </div>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default LandOppsummering;\r\n","import * as React from 'react';\r\nimport { Element } from 'nav-frontend-typografi';\r\nimport { useIntl } from 'react-intl';\r\nimport { UtenlandsoppholdFormData } from 'app/steps/utenlandsopphold/utenlandsoppholdFormTypes';\r\nimport dayjs from 'dayjs';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport LandOppsummering from './LandOppsummering';\r\nimport { Block, DisplayTextWithLabel } from '@navikt/fp-common';\r\n\r\ninterface Props {\r\n    barn: OmBarnetFormData;\r\n    informasjonOmUtenlandsopphold: UtenlandsoppholdFormData;\r\n}\r\n\r\nconst erDatoITidsperiode = (dato: string, fom: string, tom: string) => {\r\n    return dayjs(dato).isBetween(dayjs(fom), dayjs(tom), 'day', '[]');\r\n};\r\n\r\nconst erFamiliehendelsedatoIEnUtenlandsoppholdPeriode = (\r\n    familiehendelsedato: string,\r\n    informasjonOmUtenlandsopphold: UtenlandsoppholdFormData\r\n) => {\r\n    return (\r\n        informasjonOmUtenlandsopphold.utenlandsoppholdSiste12Mnd.some((tidligereOpphold) =>\r\n            erDatoITidsperiode(familiehendelsedato, tidligereOpphold.fom, tidligereOpphold.tom)\r\n        ) ||\r\n        informasjonOmUtenlandsopphold.utenlandsoppholdNeste12Mnd.some((senereOpphold) =>\r\n            erDatoITidsperiode(familiehendelsedato, senereOpphold.fom, senereOpphold.tom)\r\n        )\r\n    );\r\n};\r\n\r\nconst UtenlandsoppholdOppsummering: React.FunctionComponent<Props> = ({ barn, informasjonOmUtenlandsopphold }) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <Block>\r\n            {informasjonOmUtenlandsopphold.harBoddUtenforNorgeSiste12Mnd === YesOrNo.NO ? (\r\n                <DisplayTextWithLabel label={getMessage(intl, 'oppsummering.text.boddSisteTolv')} text=\"Norge\" />\r\n            ) : (\r\n                <div className=\"textWithLabel\">\r\n                    <Element className=\"textWithLabel__label\">\r\n                        {getMessage(intl, 'oppsummering.text.boddSisteTolv')}\r\n                    </Element>\r\n                    <LandOppsummering\r\n                        utenlandsoppholdListe={informasjonOmUtenlandsopphold.utenlandsoppholdSiste12Mnd}\r\n                    />\r\n                </div>\r\n            )}\r\n            {informasjonOmUtenlandsopphold.skalBoUtenforNorgeNeste12Mnd === YesOrNo.NO ? (\r\n                <DisplayTextWithLabel\r\n                    label={getMessage(intl, 'oppsummering.text.neste12mnd')}\r\n                    text={getMessage(intl, 'medlemmskap.radiobutton.boNorge')}\r\n                />\r\n            ) : (\r\n                <div className=\"textWithLabel\">\r\n                    <Element className=\"textWithLabel__label\">\r\n                        {getMessage(intl, 'oppsummering.text.neste12mnd')}\r\n                    </Element>\r\n                    <LandOppsummering\r\n                        utenlandsoppholdListe={informasjonOmUtenlandsopphold.utenlandsoppholdNeste12Mnd}\r\n                    />\r\n                </div>\r\n            )}\r\n            {barn.erBarnetFødt === YesOrNo.NO && (\r\n                <DisplayTextWithLabel\r\n                    label={getMessage(intl, 'oppsummering.text.ogKommerPåFødselstidspunktet')}\r\n                    text={\r\n                        erFamiliehendelsedatoIEnUtenlandsoppholdPeriode(barn.termindato!, informasjonOmUtenlandsopphold)\r\n                            ? getMessage(intl, 'medlemmskap.radiobutton.vareUtlandet')\r\n                            : getMessage(intl, 'medlemmskap.radiobutton.vareNorge')\r\n                    }\r\n                />\r\n            )}\r\n            {barn.erBarnetFødt === YesOrNo.YES && (\r\n                <DisplayTextWithLabel\r\n                    label={getMessage(intl, 'oppsummering.text.varPåFødselstidspunktet')}\r\n                    text={\r\n                        erFamiliehendelsedatoIEnUtenlandsoppholdPeriode(\r\n                            barn.fødselsdatoer[0],\r\n                            informasjonOmUtenlandsopphold\r\n                        )\r\n                            ? getMessage(intl, 'oppsummering.utenlandsopphold.iUtlandet')\r\n                            : getMessage(intl, 'oppsummering.utenlandsopphold.iNorge')\r\n                    }\r\n                />\r\n            )}\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default UtenlandsoppholdOppsummering;\r\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\r\n\r\nexport enum OppsummeringFormField {\r\n    oppgittKorrekteOpplysninger = 'oppgittKorrekteOpplysninger',\r\n}\r\n\r\nexport interface OppsummeringFormData {\r\n    [OppsummeringFormField.oppgittKorrekteOpplysninger]: boolean;\r\n}\r\n\r\nexport const initialOppsummeringValues: OppsummeringFormData = {\r\n    [OppsummeringFormField.oppgittKorrekteOpplysninger]: false,\r\n};\r\n\r\nexport const OppsummeringFormComponents = getTypedFormComponents<OppsummeringFormField, OppsummeringFormData>();\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { OppsummeringFormData, OppsummeringFormField } from './oppsummeringFormConfig';\r\n\r\nconst OppsummeringFormConfig: QuestionConfig<OppsummeringFormData, OppsummeringFormField> = {\r\n    [OppsummeringFormField.oppgittKorrekteOpplysninger]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ oppgittKorrekteOpplysninger }) => oppgittKorrekteOpplysninger === true,\r\n    },\r\n};\r\n\r\nconst oppsummeringQuestionsConfig = Questions<OppsummeringFormData, OppsummeringFormField>(OppsummeringFormConfig);\r\n\r\nexport default oppsummeringQuestionsConfig;\r\n","import { Attachment } from 'common/storage/attachment/types/Attachment';\r\nimport { isAttachmentWithError } from 'common/storage/attachment/components/util';\r\nimport { EngangsstønadSøknadDto } from 'app/types/domain/EngangsstønadSøknad';\r\nimport { EngangsstønadContextState } from 'app/context/EngangsstønadContextConfig';\r\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\r\nimport { FodtBarn, UfodtBarn } from 'app/types/domain/Barn';\r\nimport { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\r\nimport { UtenlandsoppholdFormData } from 'app/steps/utenlandsopphold/utenlandsoppholdFormTypes';\r\nimport InformasjonOmUtenlandsopphold, { Utenlandsopphold } from 'app/types/domain/InformasjonOmUtenlandsopphold';\r\nimport { BostedUtland } from 'app/steps/utenlandsopphold/bostedUtlandListAndDialog/types';\r\nimport dayjs from 'dayjs';\r\nimport { Locale } from '@navikt/fp-common';\r\n\r\nimport utc from 'dayjs/plugin/utc';\r\nimport Adopsjon from 'app/types/domain/Adopsjon';\r\n\r\ndayjs.extend(utc);\r\n\r\nconst isArrayOfAttachments = (attachment: Attachment) => {\r\n    return Array.isArray(attachment) && attachment.some((element: Attachment) => element.filename);\r\n};\r\n\r\nconst removeAttachmentsWithUploadError = (attachments: Attachment[]) =>\r\n    attachments.filter((a: Attachment) => !isAttachmentWithError(a));\r\n\r\nexport const mapAttachments = (object: object): Attachment[] => {\r\n    const foundAttachments = [] as Attachment[];\r\n    Object.keys(object).forEach((key: string) => {\r\n        if (typeof object[key] === 'object') {\r\n            if (isArrayOfAttachments(object[key])) {\r\n                foundAttachments.push(...removeAttachmentsWithUploadError(object[key]));\r\n                delete object[key];\r\n            } else {\r\n                foundAttachments.push(...mapAttachments(object[key]));\r\n            }\r\n        }\r\n    });\r\n    return foundAttachments;\r\n};\r\n\r\nconst mapBarnForInnsending = (omBarnet: OmBarnetFormData): FodtBarn | UfodtBarn | Adopsjon => {\r\n    if (omBarnet.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\r\n        return {\r\n            adopsjonAvEktefellesBarn: omBarnet.adopsjonAvEktefellesBarn === YesOrNo.YES ? true : false,\r\n            søkerAdopsjonAlene: omBarnet.søkerAdopsjonAlene === YesOrNo.YES ? true : false,\r\n            adopsjonsdato: dayjs(omBarnet.adopsjonsdato).toDate(),\r\n            antallBarn: parseInt(omBarnet.antallBarn!, 10),\r\n            fødselsdatoer: omBarnet.fødselsdatoer.map((fødselsdato) => dayjs.utc(fødselsdato).toDate()),\r\n        };\r\n    }\r\n    return omBarnet.erBarnetFødt === YesOrNo.YES\r\n        ? {\r\n              antallBarn: parseInt(omBarnet.antallBarn!, 10),\r\n              erBarnetFødt: true,\r\n              fødselsdatoer: [dayjs.utc(omBarnet.fødselsdatoer![0]).toDate()],\r\n          }\r\n        : {\r\n              antallBarn: parseInt(omBarnet.antallBarn!, 10),\r\n              erBarnetFødt: false,\r\n              termindato: dayjs.utc(omBarnet.termindato).toDate(),\r\n              terminbekreftelseDato: dayjs.utc(omBarnet.terminbekreftelsedato).toDate(),\r\n          };\r\n};\r\n\r\nconst mapBostedUtlandTilUtenlandsopphold = (bostedUtland: BostedUtland[]): Utenlandsopphold[] => {\r\n    return bostedUtland.map((bosted) => ({\r\n        land: bosted.landkode,\r\n        tidsperiode: {\r\n            fom: dayjs.utc(bosted.fom).toDate(),\r\n            tom: dayjs.utc(bosted.tom).toDate(),\r\n        },\r\n    }));\r\n};\r\n\r\nconst mapUtenlandsoppholdForInnsending = (\r\n    utenlandsopphold: UtenlandsoppholdFormData\r\n): InformasjonOmUtenlandsopphold => {\r\n    return {\r\n        senereOpphold: mapBostedUtlandTilUtenlandsopphold(utenlandsopphold.utenlandsoppholdNeste12Mnd),\r\n        tidligereOpphold: mapBostedUtlandTilUtenlandsopphold(utenlandsopphold.utenlandsoppholdSiste12Mnd),\r\n        iNorgeNeste12Mnd: utenlandsopphold.skalBoUtenforNorgeNeste12Mnd === YesOrNo.YES,\r\n        iNorgeSiste12Mnd: utenlandsopphold.harBoddUtenforNorgeSiste12Mnd === YesOrNo.YES,\r\n    };\r\n};\r\n\r\nexport const mapStateForInnsending = (state: EngangsstønadContextState, locale: Locale): EngangsstønadSøknadDto => {\r\n    const { omBarnet, utenlandsopphold } = state.søknad;\r\n    const barn: FodtBarn | UfodtBarn | Adopsjon = mapBarnForInnsending(omBarnet);\r\n    const utenlandsoppholdDto = mapUtenlandsoppholdForInnsending(utenlandsopphold);\r\n\r\n    return {\r\n        barn,\r\n        type: 'engangsstønad',\r\n        erEndringssøknad: false,\r\n        informasjonOmUtenlandsopphold: utenlandsoppholdDto,\r\n        søker: {\r\n            språkkode: locale,\r\n        },\r\n        vedlegg: mapAttachments(JSON.parse(JSON.stringify(state.søknad))),\r\n    };\r\n};\r\n","import { bemUtils, Block, intlUtils, Locale, Step } from '@navikt/fp-common';\r\nimport Veileder from '@navikt/fp-common/lib/components/veileder/Veileder';\r\nimport SøkersPersonalia from 'app/components/søkers-personalia/SøkersPersonalia';\r\nimport Veilederpanel from 'nav-frontend-veilederpanel';\r\nimport React, { useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Oppsummeringspunkt from './Oppsummeringspunkt';\r\nimport Person from 'app/types/domain/Person';\r\nimport { fullNameFormat } from 'app/util/formats/formatUtils';\r\nimport OmBarnetOppsummering from './OmBarnetOppsummering';\r\nimport UtenlandsoppholdOppsummering from './UtenlandsoppholdOppsummering';\r\nimport stepConfig, { getPreviousStepHref } from 'app/step-config/stepConfig';\r\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\r\nimport { OppsummeringFormComponents, initialOppsummeringValues, OppsummeringFormField } from './oppsummeringFormConfig';\r\nimport { UnansweredQuestionsInfo } from '@navikt/sif-common-formik/lib';\r\nimport oppsummeringQuestionsConfig from './oppsummeringQuestionsConfig';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { EngangsstønadSøknadDto } from 'app/types/domain/EngangsstønadSøknad';\r\nimport { mapStateForInnsending } from 'app/util/apiUtils';\r\nimport Api from 'app/api/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport { PageKeys } from 'app/types/PageKeys';\r\n\r\nimport './oppsummering.less';\r\n\r\ninterface Props {\r\n    person: Person;\r\n    locale: Locale;\r\n}\r\n\r\nconst Oppsummering: React.FunctionComponent<Props> = ({ person, locale }) => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('oppsummering');\r\n    const { state, dispatch } = useEngangsstønadContext();\r\n    const navigate = useNavigate();\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n    logAmplitudeEvent('sidevisning', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        pageKey: PageKeys.Oppsummering,\r\n    });\r\n\r\n    const sendSøknad = async () => {\r\n        const søknadForInnsending: EngangsstønadSøknadDto = mapStateForInnsending(state, locale);\r\n        setIsSending(true);\r\n\r\n        try {\r\n            const kvitteringResponse = Api.sendSøknad(søknadForInnsending);\r\n\r\n            kvitteringResponse.then((response) => {\r\n                dispatch(actionCreator.setKvittering(response.data));\r\n                navigate('/kvittering');\r\n                setIsSending(false);\r\n            });\r\n\r\n            logAmplitudeEvent('skjema fullført', {\r\n                app: 'engangsstonadny',\r\n                team: 'foreldrepenger',\r\n            });\r\n        } catch (error) {\r\n            navigate('/kvittering');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <OppsummeringFormComponents.FormikWrapper\r\n            initialValues={initialOppsummeringValues}\r\n            onSubmit={() => sendSøknad()}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = oppsummeringQuestionsConfig.getVisbility(formValues);\r\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\r\n\r\n                return (\r\n                    <Step\r\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\r\n                        activeStepId=\"oppsummering\"\r\n                        pageTitle={intlUtils(intl, 'søknad.oppsummering')}\r\n                        stepTitle={intlUtils(intl, 'søknad.oppsummering')}\r\n                        backLinkHref={getPreviousStepHref('oppsummering')}\r\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <OppsummeringFormComponents.Form\r\n                            includeButtons={false}\r\n                            noButtonsContentRenderer={\r\n                                allQuestionsAnswered\r\n                                    ? undefined\r\n                                    : () => (\r\n                                          <UnansweredQuestionsInfo>\r\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\r\n                                          </UnansweredQuestionsInfo>\r\n                                      )\r\n                            }\r\n                        >\r\n                            <Veilederpanel kompakt={true} svg={<Veileder />}>\r\n                                {intlUtils(intl, 'oppsummering.text.lesNoye')}\r\n                            </Veilederpanel>\r\n                            <div className={bem.block}>\r\n                                <Block>\r\n                                    <SøkersPersonalia\r\n                                        kjønn={person.kjønn}\r\n                                        navn={fullNameFormat(\r\n                                            person.fornavn,\r\n                                            person.mellomnavn,\r\n                                            person.etternavn\r\n                                        ).toLowerCase()}\r\n                                        personnummer={person.fnr}\r\n                                    />\r\n                                </Block>\r\n\r\n                                <Oppsummeringspunkt tittel={intlUtils(intl, 'søknad.omBarnet')}>\r\n                                    <OmBarnetOppsummering barn={state.søknad.omBarnet} />\r\n                                </Oppsummeringspunkt>\r\n                                <Oppsummeringspunkt tittel={intlUtils(intl, 'søknad.utenlandsopphold')}>\r\n                                    <UtenlandsoppholdOppsummering\r\n                                        barn={state.søknad.omBarnet}\r\n                                        informasjonOmUtenlandsopphold={state.søknad.utenlandsopphold}\r\n                                    />\r\n                                </Oppsummeringspunkt>\r\n                            </div>\r\n                            <Block margin=\"xl\">\r\n                                <OppsummeringFormComponents.ConfirmationCheckbox\r\n                                    name={OppsummeringFormField.oppgittKorrekteOpplysninger}\r\n                                    label=\"De opplysninger jeg har oppgitt er riktige og jeg har ikke holdt tilbake opplysninger som har betydning for min rett til engangsstønad.\"\r\n                                />\r\n                            </Block>\r\n                            {allQuestionsAnswered && (\r\n                                <Block margin=\"xl\">\r\n                                    <div className={bem.element('sendSøknadKnapp')}>\r\n                                        <Hovedknapp disabled={isSending} spinner={isSending}>\r\n                                            {intlUtils(intl, 'oppsummering.button.sendSøknad')}\r\n                                        </Hovedknapp>\r\n                                    </div>\r\n                                </Block>\r\n                            )}\r\n                        </OppsummeringFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Oppsummering;\r\n","import { bemUtils, intlUtils, Sidebanner, useDocumentTitle } from '@navikt/fp-common';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport Person from 'app/types/domain/Person';\r\nimport { PageKeys } from 'app/types/PageKeys';\r\nimport { lenker } from 'app/util/lenker';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Innholdstittel } from 'nav-frontend-typografi';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport './umyndig.less';\r\n\r\ninterface Props {\r\n    person: Person;\r\n}\r\n\r\nconst Umyndig: React.FunctionComponent<Props> = ({ person }) => {\r\n    const bem = bemUtils('umyndig');\r\n    const intl = useIntl();\r\n    useDocumentTitle(intlUtils(intl, 'velkommen.standard.dokumenttittel'));\r\n\r\n    logAmplitudeEvent('sidevisning', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        pageKey: PageKeys.Umyndig,\r\n    });\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <Sidebanner\r\n                dialog={{\r\n                    title: intlUtils(intl, 'velkommen.standard.bobletittel', {\r\n                        name: person.fornavn.toLowerCase(),\r\n                    }),\r\n                    text: (\r\n                        <div>\r\n                            <div className={bem.element('info')}>{intlUtils(intl, 'velkommen.under18.bobletekst')}</div>\r\n                            <Lenke href={lenker.papirsøknad}>\r\n                                {intlUtils(intl, 'velkommen.under18.boblelenketekst')}\r\n                            </Lenke>\r\n                        </div>\r\n                    ),\r\n                }}\r\n            />\r\n            <div className={bem.element('content')}>\r\n                <Innholdstittel>Søknad om Engangsstønad</Innholdstittel>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Umyndig;\r\n","import { detect } from 'detect-browser';\r\n\r\nconst base64ToArrayBuffer = (base64: string) => {\r\n    const binaryString = window.atob(base64);\r\n    const bytes = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n};\r\n\r\nexport const openPdfPreview = (base64: string) => {\r\n    const browserInfo = detect();\r\n    const pdfBlob = new Blob([base64ToArrayBuffer(base64)], {\r\n        type: 'application/pdf',\r\n    });\r\n\r\n    if (\r\n        browserInfo &&\r\n        (browserInfo.name === 'edge' || browserInfo.name === 'ie') &&\r\n        window.navigator &&\r\n        (window as any).navigator.msSaveOrOpenBlob\r\n    ) {\r\n        (window as any).navigator.msSaveOrOpenBlob(pdfBlob);\r\n    } else {\r\n        window.open(URL.createObjectURL(pdfBlob));\r\n    }\r\n};\r\n","import * as React from 'react';\r\n\r\nconst SpotlightLetter = (props: any) => (\r\n    <svg\r\n        width={120}\r\n        height={120}\r\n        viewBox=\"0 0 120 120\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlns-xlink=\"http://www.w3.org/1999/xlink\"\r\n        role=\"img\"\r\n        aria-hidden=\"true\"\r\n        {...props}\r\n    >\r\n        <title>Søknad sendt illustrasjon</title>\r\n        <defs>\r\n            <circle id=\"path-1\" cx=\"60\" cy=\"60\" r=\"60\" />\r\n            <circle id=\"path-3\" cx=\"8\" cy=\"8\" r=\"8\" />\r\n        </defs>\r\n        <g id=\"Spotlight/letter\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            <use id=\"Background\" fill=\"#9BD0B0\" xlinkHref=\"#path-1\" />\r\n            <g id=\"Letter\" transform=\"translate(32.000000, 30.000000)\">\r\n                <path\r\n                    d=\"M4.385,30.26975 C3.693,29.57675 0.418,27.19775 1.111,26.50475 L0,22.99075 L26.227,0.51975 C26.92,-0.17325 28.042,-0.17325 28.736,0.51975 L54.961,22.99075 L49.021,35.84775 C49.712,36.53975 27.301,48.01175 26.609,48.70575 L4.385,30.26975 Z\"\r\n                    id=\"Back\"\r\n                    fill=\"#0C576F\"\r\n                />\r\n                <g transform=\"translate(4.000000, 16.000000)\">\r\n                    <path\r\n                        d=\"M45.7388018,30.9845992 L1.50880182,30.9845992 C1.20380182,30.9845992 0.957801819,30.7355992 0.957801819,30.4345992 L0.957801819,0.606599213 C0.957801819,0.302599213 1.20380182,0.0555992126 1.50880182,0.0555992126 L45.7388018,0.0555992126 C46.0418018,0.0555992126 46.2878018,0.302599213 46.2878018,0.606599213 L46.2878018,30.4345992 C46.2878018,30.7355992 46.0418018,30.9845992 45.7388018,30.9845992\"\r\n                        id=\"Paper\"\r\n                        fill=\"#DCDCD2\"\r\n                    />\r\n                    <g id=\"Checkmark\" transform=\"translate(16.000000, 5.000000)\">\r\n                        <use id=\"Circle\" fill=\"#0C5EA8\" xlinkHref=\"#path-3\" />\r\n                        <path\r\n                            d=\"M6.56203584,9.48462091 L11.2605404,4.94732782 C11.6578208,4.5636786 12.2908893,4.57472885 12.6745385,4.97200925 C13.0581878,5.36928965 13.0471375,6.0023582 12.6498571,6.38600742 L7.19332991,11.6553145 C6.79622485,12.0387944 6.16353973,12.0279231 5.77983986,11.6311589 C5.72674155,11.5893288 5.6771113,11.5414566 5.63194475,11.4876292 L3.56731217,9.02709588 C3.21231038,8.60402121 3.26749434,7.97326562 3.69056901,7.61826382 C4.11364367,7.26326203 4.74439926,7.31844599 5.09940106,7.74152066 L6.56203584,9.48462091 Z\"\r\n                            id=\"Mark\"\r\n                            fill=\"#FFFFFF\"\r\n                        />\r\n                    </g>\r\n                </g>\r\n                <path\r\n                    d=\"M2.21639938,59.6589001 L46.9593994,59.6589001 C48.1063994,59.6589001 0.141399384,23.0289001 0.141399384,23.0289001 L0.141399384,57.5839001 C0.141399384,58.7289001 1.07039938,59.6589001 2.21639938,59.6589001\"\r\n                    id=\"Front-left\"\r\n                    fill=\"#4C92D9\"\r\n                />\r\n                <path\r\n                    d=\"M53.0298,59.6589001 L8.28679997,59.6589001 C7.14079997,59.6589001 55.1048,23.0289001 55.1048,23.0289001 L55.1048,57.5839001 C55.1048,58.7289001 54.1758,59.6589001 53.0298,59.6589001\"\r\n                    id=\"Front-right\"\r\n                    fill=\"#2C79C5\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default SpotlightLetter;\r\n","import * as React from 'react';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Sidetittel, Element } from 'nav-frontend-typografi';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport dayjs from 'dayjs';\r\nimport Person from 'app/types/domain/Person';\r\nimport Kvittering from 'app/types/services/Kvittering';\r\nimport { bemUtils, Block, VedleggIkon } from '@navikt/fp-common';\r\nimport { openPdfPreview } from 'app/util/pdfUtils';\r\nimport SpotlightLetter from '../assets/SpotlightLetter';\r\n\r\nimport './kvitteringHeader.less';\r\n\r\ninterface Props {\r\n    søker: Person;\r\n    kvittering: Kvittering | undefined;\r\n}\r\n\r\nconst KvitteringHeader: React.FunctionComponent<Props> = ({ søker, kvittering }) => {\r\n    if (!kvittering) {\r\n        return null;\r\n    }\r\n\r\n    const { pdf, mottattDato } = kvittering;\r\n    const bem = bemUtils('kvitteringHeader');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <Block margin=\"m\">\r\n                <SpotlightLetter className={bem.element('spotlightLetter')} />\r\n            </Block>\r\n\r\n            <Block margin=\"l\">\r\n                <Sidetittel tag=\"h1\">\r\n                    <FormattedMessage\r\n                        id=\"søknadSendt.tittel\"\r\n                        values={{\r\n                            navn: `${søker.fornavn} ${søker.etternavn}`,\r\n                        }}\r\n                    />\r\n                </Sidetittel>\r\n            </Block>\r\n\r\n            {pdf && (\r\n                <Block margin=\"l\">\r\n                    <div className={bem.element('vedleggWrapper')}>\r\n                        <VedleggIkon className={bem.element('vedleggIkon')} width={20} height={20} />\r\n                        <Lenke\r\n                            className={bem.element('vedleggLink')}\r\n                            href={'#'}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                openPdfPreview(pdf);\r\n                            }}\r\n                        >\r\n                            <FormattedMessage id={'søknadSendt.pdf'} />\r\n                        </Lenke>\r\n                    </div>\r\n                </Block>\r\n            )}\r\n\r\n            <Block margin=\"l\">\r\n                <div className={bem.element('sendtInnTid')}>\r\n                    <Element>\r\n                        <FormattedMessage id=\"søknadSendt.sendtInn\" />\r\n                        <span style={{ width: '0.25rem' }} />\r\n                        {dayjs(mottattDato).format('D MMMM YYYY')}, kl. {dayjs(mottattDato).format('HH:mm')}\r\n                    </Element>\r\n                </div>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KvitteringHeader;\r\n","import * as React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport EtikettBase from 'nav-frontend-etiketter';\r\nimport { LenkepanelBase } from 'nav-frontend-lenkepanel';\r\nimport { Undertittel, Element, Ingress, Systemtittel } from 'nav-frontend-typografi';\r\nimport { bemUtils, Block } from '@navikt/fp-common';\r\nimport { lenker } from 'app/util/lenker';\r\n\r\nimport './statusBoks.less';\r\n\r\ninterface Props {\r\n    saksNr: string;\r\n}\r\n\r\nconst StatusBoks: React.FunctionComponent<Props> = ({ saksNr }) => {\r\n    const bem = bemUtils('statusBoks');\r\n\r\n    return (\r\n        <Block margin=\"l\">\r\n            <Block>\r\n                <Systemtittel>\r\n                    <FormattedMessage id=\"søknadSendt.status.tittel\" />\r\n                </Systemtittel>\r\n            </Block>\r\n            <Block margin=\"l\">\r\n                <LenkepanelBase href={lenker.innsyn} border={true} className=\"statusBoks__lenkepanel\">\r\n                    <div className={bem.block}>\r\n                        <div className={bem.element('left')}>\r\n                            <Undertittel tag=\"h3\">\r\n                                <FormattedMessage id=\"søknadSendt.status.undertittel\" />\r\n                            </Undertittel>\r\n                            <Block margin=\"l\">\r\n                                <EtikettBase type=\"fokus\">\r\n                                    <FormattedMessage id=\"søknadSendt.status.status\" />\r\n                                </EtikettBase>\r\n                            </Block>\r\n                        </div>\r\n                        {saksNr && (\r\n                            <div className={bem.element('right')}>\r\n                                <Element>\r\n                                    <FormattedMessage id=\"søknadSendt.status.saksnummer\" />\r\n                                </Element>\r\n                                <Ingress>{saksNr}</Ingress>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </LenkepanelBase>\r\n            </Block>\r\n        </Block>\r\n    );\r\n};\r\n\r\nexport default StatusBoks;\r\n","import * as React from 'react';\r\n\r\nconst CheckmarkIkon = (props: any) => (\r\n    <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={24} height={24} {...props}>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                fill=\"#1C6937\"\r\n                d=\"M12 .5C18.34.5 23.5 5.66 23.5 12S18.34 23.5 12 23.5C5.659 23.5.5 18.341.5 12S5.659.5 12 .5z\"\r\n            />\r\n            <path\r\n                fill=\"#FFF\"\r\n                d=\"M16.329 7.76a1 1 0 1 1 1.363 1.464l-7.52 7.007a1 1 0 0 1-1.388-.024L6.28 13.709a1 1 0 0 1 1.413-1.416l1.82 1.817 6.816-6.35z\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default CheckmarkIkon;\r\n","import * as React from 'react';\r\nimport { Undertittel, Normaltekst } from 'nav-frontend-typografi';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { bemUtils, Block } from '@navikt/fp-common';\r\nimport CheckmarkIkon from '../assets/CheckmarkIkon';\r\n\r\nimport './kvitteringSuksess.less';\r\n\r\nconst KvitteringSuksess: React.FunctionComponent = () => {\r\n    const bem = bemUtils('kvittering');\r\n\r\n    return (\r\n        <div className={bem.block}>\r\n            <div className={bem.element('suksess')}>\r\n                <div className={bem.element('ikon')}>\r\n                    <CheckmarkIkon />\r\n                </div>\r\n                <div className={bem.element('tekst')}>\r\n                    <Block margin=\"s\">\r\n                        <Undertittel>\r\n                            <FormattedMessage id=\"søknadSendt.info.tittel\" />\r\n                        </Undertittel>\r\n                    </Block>\r\n                    <div>\r\n                        <Normaltekst>\r\n                            <FormattedMessage id=\"søknadSendt.info.innhold\" />\r\n                        </Normaltekst>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectIntl(KvitteringSuksess);\r\n","import * as React from 'react';\r\n\r\nconst KalenderIkon = (props: any) => (\r\n    <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={34} height={31} {...props}>\r\n        <title>{'Group'}</title>\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n                d=\"M25.185 4.428c0-.698.564-1.265 1.26-1.265.694 0 1.259.567 1.259 1.265 0 .7-.565 1.266-1.26 1.266-.695 0-1.259-.567-1.259-1.266zm-18.889 0c0-.698.564-1.265 1.26-1.265.695 0 1.259.567 1.259 1.265 0 .7-.564 1.266-1.26 1.266a1.262 1.262 0 0 1-1.259-1.266zM31.79 0H2.21A2.2 2.2 0 0 0 0 2.191v6.033h34V2.191c0-.907-.557-1.686-1.35-2.02A2.224 2.224 0 0 0 31.79 0z\"\r\n                fill=\"#C42229\"\r\n            />\r\n            <path d=\"M0 8.224v20.522C0 29.99.99 31 2.21 31h29.58c1.22 0 2.21-1.01 2.21-2.254V8.224H0z\" fill=\"#E3E3DA\" />\r\n            <g fillRule=\"nonzero\">\r\n                <path\r\n                    d=\"M6.93 13.918a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93zM6.93 18.347a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\r\n                    fill=\"#78706A\"\r\n                />\r\n                <path\r\n                    d=\"M21.407 20.878a3.156 3.156 0 0 1-3.148-3.164 3.156 3.156 0 0 1 3.148-3.163 3.156 3.156 0 0 1 3.149 3.163 3.156 3.156 0 0 1-3.149 3.164zm0-1.266c1.044 0 1.89-.85 1.89-1.898a1.893 1.893 0 0 0-1.89-1.898c-1.043 0-1.888.85-1.888 1.898s.845 1.898 1.888 1.898z\"\r\n                    fill=\"#06893A\"\r\n                />\r\n                <path\r\n                    d=\"M6.93 22.776a.633.633 0 1 1 0-1.266h20.14a.633.633 0 1 1 0 1.266H6.93zM6.93 27.204a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\r\n                    fill=\"#78706A\"\r\n                />\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default KalenderIkon;\r\n","import * as React from 'react';\r\n\r\nconst UtbetalingerIkon = (props: any) => {\r\n    const { title, ...rest } = props;\r\n    return (\r\n        <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={46} height={37} {...rest}>\r\n            <g transform=\"translate(0 -6)\" fill=\"none\" fillRule=\"evenodd\">\r\n                <path fill=\"#E3B0A8\" d=\"M3.538 6.708H46v23.048H3.538z\" />\r\n                <path fill=\"#F1D8D4\" d=\"M37.153 6.708h5.308v23.048h-5.308z\" />\r\n                <path fill=\"#C2EAF7\" d=\"M1.77 8.481H44.23V31.53H1.77z\" />\r\n                <path fill=\"#E0F5FB\" d=\"M35.384 8.481h5.308V31.53h-5.308z\" />\r\n                <path fill=\"#9BD0B0\" d=\"M0 10.254h42.462v23.048H0z\" />\r\n                <path fill=\"#CDE7D8\" d=\"M33.615 10.254h5.308v23.048h-5.308z\" />\r\n                <path\r\n                    d=\"M5.308 20.775v-6.853h1.07l4.14 5.38v-5.38h1v6.853h-1.07l-4.14-5.386v5.386h-1zm7.645-3.338c0-1.138.351-2.028 1.054-2.672.702-.643 1.609-.965 2.72-.965.728 0 1.384.151 1.968.453.584.303 1.03.724 1.336 1.265.306.54.46 1.154.46 1.84 0 .695-.162 1.316-.484 1.865-.323.548-.78.964-1.371 1.246a4.389 4.389 0 0 1-1.914.423c-.742 0-1.405-.156-1.99-.468a3.205 3.205 0 0 1-1.328-1.276 3.457 3.457 0 0 1-.451-1.711zm1.075.014c0 .826.255 1.476.766 1.952.511.475 1.152.713 1.922.713.785 0 1.431-.24 1.938-.72.508-.48.761-1.161.761-2.043 0-.558-.108-1.045-.325-1.461a2.29 2.29 0 0 0-.952-.968 2.874 2.874 0 0 0-1.406-.343c-.738 0-1.373.22-1.905.661-.533.441-.799 1.177-.799 2.209zm7.764 3.324v-6.853h1.043v3.398l3.914-3.398h1.414l-3.307 2.776 3.452 4.077H26.93l-2.806-3.469-1.29 1.094v2.375h-1.043z\"\r\n                    fill=\"#117938\"\r\n                />\r\n                <ellipse fill=\"#FECB86\" fillRule=\"nonzero\" cx={8.846} cy={35.075} rx={7.077} ry={7.092} />\r\n                <path\r\n                    d=\"M19.462 42.167a5.313 5.313 0 0 1-5.308-5.32 5.313 5.313 0 0 1 5.308-5.318 5.313 5.313 0 0 1 5.307 5.319 5.313 5.313 0 0 1-5.307 5.319zm0-3.546c.977 0 1.769-.794 1.769-1.773 0-.98-.792-1.773-1.77-1.773-.977 0-1.769.794-1.769 1.773 0 .98.792 1.773 1.77 1.773z\"\r\n                    fill=\"#F0F2F2\"\r\n                    fillRule=\"nonzero\"\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default UtbetalingerIkon;\r\n","import * as React from 'react';\r\nimport KalenderIkon from '../assets/KalenderIkon';\r\nimport UtbetalingerIkon from '../assets/UtbetalingerIkon';\r\n\r\ninterface Props {\r\n    type: OppsummeringIkonType;\r\n    className?: string;\r\n}\r\n\r\nexport type OppsummeringIkonType = 'kalender' | 'cash';\r\n\r\nconst SøknadSendtIkon: React.FunctionComponent<Props> = ({ type, className }) => {\r\n    switch (type) {\r\n        case 'cash':\r\n            return <UtbetalingerIkon className={className} width={48} height={48} />;\r\n        case 'kalender':\r\n            return <KalenderIkon className={className} width={48} height={48} />;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\nexport default SøknadSendtIkon;\r\n","import * as React from 'react';\r\nimport { bemUtils, UtvidetInformasjon } from '@navikt/fp-common';\r\nimport { Undertittel } from 'nav-frontend-typografi';\r\nimport SøknadSendtIkon, { OppsummeringIkonType } from './SøknadSendtIkon';\r\n\r\nimport './søknadSendtSectionHeader.less';\r\n\r\ninterface Props {\r\n    title: string | React.ReactNode;\r\n    info?: string | React.ReactNode;\r\n    type: OppsummeringIkonType;\r\n    children?: React.ReactNode;\r\n    apneLabel: string | React.ReactNode;\r\n}\r\n\r\nconst SøknadSendtSectionHeader: React.FunctionComponent<Props> = ({ title, info, type, apneLabel, children }) => {\r\n    const bem = bemUtils('søknadSendtSectionHeader');\r\n\r\n    return (\r\n        <section className={bem.block}>\r\n            <div className={bem.element('punkt')}>\r\n                <div className={bem.element('ikon')}>\r\n                    <SøknadSendtIkon type={type} />\r\n                </div>\r\n                <div className={bem.element('content')}>\r\n                    <Undertittel>{title}</Undertittel>\r\n                    <UtvidetInformasjon apneLabel={apneLabel}>{info}</UtvidetInformasjon>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SøknadSendtSectionHeader;\r\n","import React from 'react';\r\n\r\nimport './søknadSendtTittel.less';\r\n\r\nconst SøknadSendtTittel = () => (\r\n    <div className=\"søknadSendtTittel\" role=\"main\" aria-label=\"Engangsstønad\">\r\n        <h2 className=\"typo-undertittel\">Engangsstønad</h2>\r\n    </div>\r\n);\r\n\r\nexport default SøknadSendtTittel;\r\n","import * as React from 'react';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { bemUtils, Block, intlUtils, useDocumentTitle } from '@navikt/fp-common';\r\nimport { Ingress, Normaltekst, Element } from 'nav-frontend-typografi';\r\nimport KvitteringHeader from './components/KvitteringHeader';\r\nimport StatusBoks from './components/StatusBoks';\r\nimport Person from 'app/types/domain/Person';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { lenker } from 'app/util/lenker';\r\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\r\nimport KvitteringSuksess from './components/KvitteringSuksess';\r\nimport SøknadSendtSectionHeader from './components/SøknadSendtSectionHeader';\r\n\r\nimport './søknadSendt.less';\r\nimport SøknadSendtTittel from './components/SøknadtSendtTittel';\r\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\r\nimport { PageKeys } from 'app/types/PageKeys';\r\n\r\ninterface Props {\r\n    person: Person;\r\n}\r\n\r\nconst SøknadSendt: React.FunctionComponent<Props> = ({ person }) => {\r\n    const bem = bemUtils('søknadSendt');\r\n    const intl = useIntl();\r\n    useDocumentTitle(intlUtils(intl, 'søknadSendt.dokumenttittel'));\r\n    const { state } = useEngangsstønadContext();\r\n    const { kvittering } = state;\r\n\r\n    logAmplitudeEvent('sidevisning', {\r\n        app: 'engangsstonadny',\r\n        team: 'foreldrepenger',\r\n        pageKey: PageKeys.SøknadSendt,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <SøknadSendtTittel />\r\n            <div className={bem.block}>\r\n                <KvitteringHeader søker={person} kvittering={kvittering} />\r\n                <Block margin=\"xl\">\r\n                    <KvitteringSuksess />\r\n                </Block>\r\n                <Block margin=\"l\">\r\n                    <SøknadSendtSectionHeader\r\n                        title={intlUtils(intl, 'søknadSendt.pengene.tittel')}\r\n                        type=\"cash\"\r\n                        info={intlUtils(intl, 'søknadSendt.pengene.infoBox')}\r\n                        apneLabel={intlUtils(intl, 'søknadSendt.pengene.apneLabel')}\r\n                    >\r\n                        {person.bankkonto && person.bankkonto.kontonummer ? (\r\n                            <>\r\n                                <Block margin=\"none\">\r\n                                    <Element>\r\n                                        <FormattedMessage id=\"søknadSendt.pengene.kontonummer\" />\r\n                                    </Element>\r\n                                </Block>\r\n                                <Block margin=\"s\">\r\n                                    <Ingress>{person.bankkonto && person.bankkonto.kontonummer}</Ingress>\r\n                                </Block>\r\n                                <Block margin=\"none\">\r\n                                    <Lenke href={lenker.brukerprofil}>\r\n                                        <FormattedMessage id=\"søknadSendt.pengene.kontonummer.endre\" />\r\n                                    </Lenke>\r\n                                </Block>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Block margin=\"s\">\r\n                                    <Normaltekst>\r\n                                        <FormattedMessage id=\"søknadSendt.pengene.ingenKontonummer\" />\r\n                                    </Normaltekst>\r\n                                </Block>\r\n                                <Block margin=\"none\">\r\n                                    <Lenke href={lenker.brukerprofil}>\r\n                                        <FormattedMessage id=\"søknadSendt.pengene.kontonummer.leggTil\" />\r\n                                    </Lenke>\r\n                                </Block>\r\n                            </>\r\n                        )}\r\n                    </SøknadSendtSectionHeader>\r\n                </Block>\r\n                <Block margin=\"l\">\r\n                    <StatusBoks saksNr={kvittering?.saksNr || ''} />\r\n                </Block>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SøknadSendt;\r\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\r\nimport { SøkersituasjonFormData, SøkersituasjonFormField } from './søkersituasjonFormConfig';\r\n\r\nconst SøkersituasjonFormConfig: QuestionConfig<SøkersituasjonFormData, SøkersituasjonFormField> = {\r\n    [SøkersituasjonFormField.situasjon]: {\r\n        isIncluded: () => true,\r\n        isAnswered: ({ situasjon }) => situasjon !== undefined,\r\n    },\r\n};\r\n\r\nconst søkersituasjonQuestionsConfig = Questions<SøkersituasjonFormData, SøkersituasjonFormField>(\r\n    SøkersituasjonFormConfig\r\n);\r\n\r\nexport default søkersituasjonQuestionsConfig;\r\n","import { bemUtils, Block, intlUtils, Step } from '@navikt/fp-common';\r\nimport stepConfig from 'app/step-config/stepConfig';\r\nimport getMessage from 'common/util/i18nUtils';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport actionCreator from 'app/context/action/actionCreator';\r\nimport {\r\n    SøkersituasjonFormComponents,\r\n    SøkersituasjonFormData,\r\n    SøkersituasjonFormField,\r\n} from './søkersituasjonFormConfig';\r\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\r\n\r\nimport { cleanupSøkersituasjon } from './søkersituasjonUtils';\r\nimport { UnansweredQuestionsInfo } from '@navikt/sif-common-formik/lib';\r\nimport søkersituasjonQuestionsConfig from './søkersituasjonQuestionsConfig';\r\nimport { Hovedknapp } from 'nav-frontend-knapper';\r\nimport { useNavigate } from 'react-router';\r\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\r\n\r\nconst Søkersituasjon: React.FunctionComponent = () => {\r\n    const intl = useIntl();\r\n    const bem = bemUtils('søkersituasjon');\r\n    const navigate = useNavigate();\r\n    const { state, dispatch } = useEngangsstønadContext();\r\n    const søkersituasjonValues = state.søknad.søkersituasjon;\r\n\r\n    const onValidSubmit = (values: Partial<SøkersituasjonFormData>) => {\r\n        dispatch(\r\n            actionCreator.setSøkersituasjon({\r\n                situasjon: values.situasjon,\r\n            })\r\n        );\r\n        navigate('/soknad/om-barnet');\r\n    };\r\n\r\n    return (\r\n        <SøkersituasjonFormComponents.FormikWrapper\r\n            initialValues={søkersituasjonValues}\r\n            onSubmit={(values) => onValidSubmit(values)}\r\n            renderForm={({ values: formValues }) => {\r\n                const visibility = søkersituasjonQuestionsConfig.getVisbility(formValues);\r\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\r\n                return (\r\n                    <Step\r\n                        bannerTitle={getMessage(intl, 'søknad.pageheading')}\r\n                        activeStepId=\"søkersituasjon\"\r\n                        pageTitle={getMessage(intl, 'søknad.søkersituasjon')}\r\n                        stepTitle={getMessage(intl, 'søknad.søkersituasjon')}\r\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\r\n                        steps={stepConfig}\r\n                        kompakt={true}\r\n                    >\r\n                        <SøkersituasjonFormComponents.Form\r\n                            includeButtons={false}\r\n                            cleanup={() => cleanupSøkersituasjon(formValues)}\r\n                            noButtonsContentRenderer={\r\n                                allQuestionsAnswered\r\n                                    ? undefined\r\n                                    : () => (\r\n                                          <UnansweredQuestionsInfo>\r\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\r\n                                          </UnansweredQuestionsInfo>\r\n                                      )\r\n                            }\r\n                        >\r\n                            <div className={bem.block}>\r\n                                <Block margin=\"xl\">\r\n                                    <SøkersituasjonFormComponents.RadioPanelGroup\r\n                                        name={SøkersituasjonFormField.situasjon}\r\n                                        radios={[\r\n                                            {\r\n                                                label: intlUtils(intl, 'søkersituasjon.radiobutton.adopsjon'),\r\n                                                value: 'adopsjon',\r\n                                            },\r\n                                            {\r\n                                                label: intlUtils(intl, 'søkersituasjon.radiobutton.fødsel'),\r\n                                                value: 'fødsel',\r\n                                            },\r\n                                        ]}\r\n                                        useTwoColumns={true}\r\n                                        legend={getMessage(intl, 'søkersituasjon.text.situasjon')}\r\n                                    />\r\n                                </Block>\r\n                                {allQuestionsAnswered && (\r\n                                    <Block margin=\"xl\" textAlignCenter={true}>\r\n                                        <Hovedknapp>{getMessage(intl, 'søknad.gåVidere')}</Hovedknapp>\r\n                                    </Block>\r\n                                )}\r\n                            </div>\r\n                        </SøkersituasjonFormComponents.Form>\r\n                    </Step>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default Søkersituasjon;\r\n","import { SøkersituasjonFormData } from './søkersituasjonFormConfig';\r\n\r\nexport const cleanupSøkersituasjon = (formData: SøkersituasjonFormData): SøkersituasjonFormData => {\r\n    const cleanedData: Partial<SøkersituasjonFormData> = {};\r\n    cleanedData.situasjon = formData.situasjon;\r\n\r\n    return cleanedData as SøkersituasjonFormData;\r\n};\r\n/*\r\nexport const dataSøkersituasjonIsValid = (dataSøkersituasjo: SøkersituasjonFormData): boolean => {\r\n    if (dataSøkersituasjo.situasjon === 'adopsjon') {\r\n        return dataSøkersituasjo.situasjon !== undefined;\r\n    }\r\n    if (dataSøkersituasjo.situasjon === 'fødsel') {\r\n        return dataSøkersituasjo.situasjon !== undefined;\r\n    }\r\n    return false;\r\n};\r\n*/\r\n","import React from 'react';\r\nimport DocumentTitle from 'react-document-title';\r\nimport Lenke from 'nav-frontend-lenker';\r\nimport { Innholdstittel, Ingress } from 'nav-frontend-typografi';\r\nimport { Språkkode } from 'intl/types';\r\nimport { VeilederProps } from '@navikt/fp-common/lib/components/veileder/Veileder';\r\nimport { Locale, bemUtils, Block, LanguageToggle, Sidebanner } from '@navikt/fp-common';\r\n\r\nimport './feilside.less';\r\n\r\nexport interface Props {\r\n    containerId?: string;\r\n    dokumenttittel: string;\r\n    illustrasjon?: {\r\n        tittel: string;\r\n        tekst: React.ReactNode;\r\n        lenke?: {\r\n            url: string;\r\n            tekst: string;\r\n        };\r\n        veileder?: VeilederProps;\r\n    };\r\n    tittel: React.ReactNode;\r\n    ingress: React.ReactNode;\r\n    språkkode?: Språkkode;\r\n    setLanguage?: (languageCode: Locale) => void;\r\n}\r\n\r\nconst Feilside: React.FunctionComponent<Props> = ({\r\n    containerId,\r\n    dokumenttittel,\r\n    illustrasjon,\r\n    tittel,\r\n    ingress,\r\n    språkkode,\r\n    setLanguage,\r\n}) => {\r\n    const bem = bemUtils('feilside');\r\n\r\n    return (\r\n        <>\r\n            <DocumentTitle title={dokumenttittel} />\r\n            {setLanguage && språkkode && (\r\n                <LanguageToggle locale={språkkode} availableLocales={['en', 'nb', 'nn']} toggle={setLanguage} />\r\n            )}\r\n            {illustrasjon && (\r\n                <Sidebanner\r\n                    veileder={illustrasjon.veileder}\r\n                    dialog={{\r\n                        title: illustrasjon.tittel,\r\n                        text: (\r\n                            <>\r\n                                <Block padBottom=\"m\">{illustrasjon.tekst}</Block>\r\n                                {illustrasjon.lenke && (\r\n                                    <Lenke className=\"intro-snakkelenke\" href={illustrasjon.lenke.url}>\r\n                                        {illustrasjon.lenke.tekst}\r\n                                    </Lenke>\r\n                                )}\r\n                            </>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n            <div id={containerId} className={bem.block}>\r\n                <div className=\"responsiveContainer\">\r\n                    <div className=\"blokk-s\">\r\n                        <Innholdstittel>{tittel}</Innholdstittel>\r\n                    </div>\r\n                    <div className=\"blokk-l\">\r\n                        <Ingress>{ingress}</Ingress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Feilside;\r\n","import React from 'react';\r\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\r\nimport Velkommen from './pages/velkommen/Velkommen';\r\nimport { useRequest } from './api/apiHooks';\r\nimport Api from './api/api';\r\nimport NavFrontendSpinner from 'nav-frontend-spinner';\r\nimport Person from './types/domain/Person';\r\nimport { erMyndig, intlUtils, Locale } from '@navikt/fp-common';\r\nimport OmBarnet from './steps/om-barnet/OmBarnet';\r\nimport Utenlandsopphold from './steps/utenlandsopphold/Utenlandsopphold';\r\nimport Oppsummering from './steps/oppsummering/Oppsummering';\r\nimport { useEngangsstønadContext } from './context/hooks/useEngangsstønadContext';\r\nimport Umyndig from './pages/umyndig/Umyndig';\r\nimport SøknadSendt from './pages/søknad-sendt/SøknadSendt';\r\nimport Søkersituasjon from './steps/søkersituasjon/Søkersituasjon';\r\nimport Feilside from './components/feilside/Feilside';\r\nimport { useIntl } from 'react-intl';\r\nimport { lenker } from './util/lenker';\r\n\r\ninterface Props {\r\n    locale: Locale;\r\n    onChangeLocale: (locale: Locale) => void;\r\n}\r\n\r\nconst renderSpinner = () => (\r\n    <div style={{ textAlign: 'center', padding: '12rem 0' }}>\r\n        <NavFrontendSpinner type=\"XXL\" />\r\n    </div>\r\n);\r\n\r\nconst Engangsstønad: React.FunctionComponent<Props> = ({ locale, onChangeLocale }) => {\r\n    const { data, loading, error } = useRequest<Person>(Api.getPerson());\r\n    const { state } = useEngangsstønadContext();\r\n    const intl = useIntl();\r\n\r\n    if (error !== null) {\r\n        if (error.response?.status === 401 || error.response?.status === 403) {\r\n            return renderSpinner();\r\n        }\r\n\r\n        return (\r\n            <Feilside\r\n                dokumenttittel=\"NAV Engangsstønad\"\r\n                ingress=\"\"\r\n                tittel=\"\"\r\n                illustrasjon={{\r\n                    tittel: intlUtils(intl, 'intro.generellFeil.tittel'),\r\n                    tekst: intlUtils(intl, 'intro.generellFeil.ingress'),\r\n                    veileder: {\r\n                        ansikt: 'skeptisk',\r\n                    },\r\n                    lenke: { tekst: intlUtils(intl, 'intro.generellFeil.brukerstøtte'), url: lenker.brukerstøtte },\r\n                }}\r\n                setLanguage={onChangeLocale}\r\n                språkkode={locale}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (loading || !data) {\r\n        return renderSpinner();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!erMyndig(data.fødselsdato) ? (\r\n                <Umyndig person={data} />\r\n            ) : (\r\n                <BrowserRouter>\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"/\"\r\n                            element={\r\n                                <Velkommen fornavn={data.fornavn} locale={locale} onChangeLocale={onChangeLocale} />\r\n                            }\r\n                        />\r\n                        {!state.søknad.velkommen.harForståttRettigheterOgPlikter ? (\r\n                            <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n                        ) : (\r\n                            <>\r\n                                <Route path=\"/soknad/søkersituasjon\" element={<Søkersituasjon />} />\r\n                                <Route path=\"/soknad/om-barnet\" element={<OmBarnet person={data} />} />\r\n                                <Route path=\"/soknad/utenlandsopphold\" element={<Utenlandsopphold />} />\r\n                                <Route\r\n                                    path=\"/soknad/oppsummering\"\r\n                                    element={<Oppsummering person={data} locale={locale} />}\r\n                                />\r\n                                <Route path=\"/kvittering\" element={<SøknadSendt person={data} />} />\r\n                            </>\r\n                        )}\r\n                    </Routes>\r\n                </BrowserRouter>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Engangsstønad;\r\n","import { useState, useEffect } from 'react';\r\nimport { AxiosResponse, AxiosError } from 'axios';\r\n\r\nexport const useRequest = <T>(request: Promise<AxiosResponse<any>>) => {\r\n    const [data, setData] = useState<T>();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<AxiosError<any> | null>(null);\r\n\r\n    useEffect(() => {\r\n        let ignore = false;\r\n        const fetch = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await request;\r\n                if (!ignore) {\r\n                    setData(response.data);\r\n                }\r\n            } catch (err: any) {\r\n                setError(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetch();\r\n        return () => {\r\n            ignore = true;\r\n        };\r\n    }, []);\r\n\r\n    return { data, loading, error };\r\n};\r\n","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { getLocaleFromSessionStorage, Locale, setLocaleInSessionStorage } from '@navikt/fp-common';\r\nimport Engangsstønad from './Engangsstønad';\r\nimport EngangsstønadContextProvider from './context/EngangsstønadContext';\r\nimport IntlProvider from './intl/IntlProvider';\r\n\r\nconst localeFromSessionStorage = getLocaleFromSessionStorage();\r\n\r\ndayjs.locale(localeFromSessionStorage);\r\n\r\nconst AppContainer = () => {\r\n    const [locale, setLocale] = React.useState<Locale>(localeFromSessionStorage);\r\n\r\n    return (\r\n        <EngangsstønadContextProvider>\r\n            <IntlProvider språkkode={locale}>\r\n                <Engangsstønad\r\n                    locale={locale}\r\n                    onChangeLocale={(activeLocale: Locale) => {\r\n                        setLocaleInSessionStorage(activeLocale);\r\n                        setLocale(activeLocale);\r\n                    }}\r\n                />\r\n            </IntlProvider>\r\n        </EngangsstønadContextProvider>\r\n    );\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\r\nimport { Story } from '@storybook/react'; // eslint-disable-line import/no-extraneous-dependencies\r\nimport MockAdapter from 'axios-mock-adapter';\r\n\r\nimport AppContainer from './AppContainer';\r\nimport { foreldrepengersoknadApi } from './api/api';\r\n\r\n\r\nexport default {\r\n  title: 'AppContainer',\r\n  component: AppContainer,\r\n};\r\n\r\nconst Template: Story<any> = () => {\r\n    const apiMock = new MockAdapter(foreldrepengersoknadApi);\r\n    apiMock.onGet('/personinfo').reply(200, {\r\n      fnr: '11111111111',\r\n      fornavn: 'Henrikke',\r\n      etternavn: 'Ibsen',\r\n      kjønn: 'K',\r\n      fødselsdato: '1979-01-28',\r\n      ikkeNordiskEøsLand: true,\r\n      bankkonto: {\r\n          kontonummer: '49875234987',\r\n          banknavn: 'Storebank',\r\n      },\r\n  });\r\n\r\n  apiMock.onPost('/soknad').reply(200, {\r\n    mottattDato: '2019-02-19T13:40:45.115',\r\n    referanseId: '3959c880-83d2-4f01-b107-035fa7693758',\r\n    leveranseStatus: 'PÅ_VENT',\r\n    journalId: '439772941',\r\n});\r\n\r\n  return (\r\n    <AppContainer />\r\n  )\r\n  };\r\n\r\nexport const VisApp = Template.bind({});\r\n"],"names":["symbol","props","width","height","role","viewBox","transform","fill","fillRule","cx","cy","r","d","stroke","strokeWidth","lenker","VelkommenFormField","initialVelkommenValues","VelkommenFormComponents","getTypedFormComponents","payload","type","SET_VELKOMMEN","SET_OM_BARNET","SET_UTENLANDSOPPHOLD","SET_KVITTERING","OmBarnetFormField","initialOmBarnetValues","YesOrNo","adopsjonAvEktefellesBarn","antallBarn","undefined","adopsjonsdato","termindato","omsorgsovertakelse","terminbekreftelse","terminbekreftelsedato","OmBarnetFormComponents","initialUtenlandsoppholdFormData","UtenlandsoppholdFormComponents","situasjon","velkommen","omBarnet","utenlandsopphold","kvittering","state","action","createContext","children","dispatch","useReducer","contextValue","useMemo","Provider","value","useContext","intl","id","formatMessage","useIntl","className","Undertittel","Normaltekst","Element","values","link","href","target","logAmplitudeEvent","eventName","eventData","logToConsoleOnly","setTimeout","logEvent","error","console","PageKeys","fornavn","locale","onChangeLocale","bem","bemUtils","navigate","useDocumentTitle","intlUtils","app","team","pageKey","Velkommen","PersonopplysningerModalOpen","setPersonopplysningerModalOpen","useState","FormikWrapper","initialValues","onSubmit","actionCreator","onValidSubmit","renderForm","Form","includeButtons","LanguageToggle","availableLocales","toggle","l","Sidebanner","dialog","title","name","text","Block","padBottom","block","element","Innholdstittel","Ingress","kompakt","svg","a","msg","rel","ConfirmationCheckbox","label","validate","result","UtvidetInformasjon","apneLabel","Hovedknapp","onClick","e","isOpen","closeButton","onRequestClose","contentLabel","redirect","url","window","location","foreldrepengersoknadApi","axios","baseURL","REST_API_URL","withCredentials","interceptors","request","use","config","timeout","response","status","includes","LOGIN_URL","origin","Promise","reject","getPerson","get","soknad","post","headers","OmBarnetFormConfig","isIncluded","isAnswered","visibilityFilter","hasValue","length","hendelse","getPreviousStepHref","_x","Error","assertUnreachable","index","visibility","formValues","isVisible","margin","RadioPanelGroup","radios","useTwoColumns","legend","parseInt","Select","FieldArray","render","DatePicker","key","minDate","subtract","toDate","maxDate","dato","etterDagensDato","placeholder","AttachmentType","Skjemanummer","mapFileToAttachment","file","skjemanummer","concat","guid","replace","filename","filesize","size","uploaded","pending","isAttachmentWithError","saveAttachment","attachment","formData","FormData","append","ariaLabel","stopPropagation","TrashcanIkon","showFileSize","onDelete","cls","classnames","modifier","VedleggIkon","bytes","unitSeparator","thousandsSeparator","decimalPlaces","fixedDecimals","navn","TransitionGroup","attachments","map","CSSTransition","classNames","VALID_EXTENSIONS","getPendingAttachmentFromFile","newAttachment","TERMINBEKREFTELSE","OMSORGSOVERTAKELSE","getAttachmentFromFile","attachmentUploadHasFailed","fileExtensionIsValid","ext","split","pop","toLowerCase","removeFn","onFileInputClick","otherProps","useFormikContext","async","uploadAttachment","setAttachmentPendingToFalse","uuid","data","uploadAttachments","allAttachments","replaceFn","updateAttachmentListElement","failedAttachments","filter","updateFailedAttachments","forEach","atts","indexOf","acceptedExtensions","join","onFilesSelect","files","push","remove","addPendingAttachmentToFieldArray","pushFn","add","erMindreEnn3UkerSiden","sisteMuligeTermindato","validateTerminDate","PictureScanningGuide","terminBekreftelseDato","utstedtDatoErIUke22","valideringAvTerminbekreftelsesdato","sisteMuligeDatoForOvertaOmsorg","validateEktefellensBarnAdopsjonDate","validateOvertaOmsorgAdopsjonDate","Array","_","YesOrNoQuestion","labels","no","yes","person","shouldResetInitialValues","OmBarnet","allQuestionsAnswered","areAllQuestionsAnswered","Step","bannerTitle","activeStepId","pageTitle","stepTitle","backLinkHref","onCancel","steps","cleanup","cleanedData","cleanupOmBarnet","noButtonsContentRenderer","UnansweredQuestionsInfo","textAlignCenter","UtenlandsoppholdFormConfig","harBoddUtenforNorgeSiste12Mnd","skalBoUtenforNorgeNeste12Mnd","utenlandsoppholdSiste12Mnd","isOptional","utenlandsoppholdNeste12Mnd","utenlandsoppholdFormQuestions","validateDateInRange","date","isFomDate","isBetween","dateIsWithinRange","fom","formatDateExtended","tom","dateRangeValidation","fromDate","isBefore","isAfter","BostedUtlandFormFields","mapBostedToFormValues","bosted","landkode","erFremtidigOpphold","updatedBosted","isValidBostedUtland","Systemtittel","tag","DateIntervalPicker","fromDatepickerProps","fullscreenOverlay","invalidFormatError","ISOStringToDate","toDatepickerProps","CountrySelect","country","useAlpha3Code","bosteder","onEdit","ItemList","getItemId","opphold","getItemTitle","getCountryName","labelRenderer","ActionLink","items","BostedUtlandListAndDialog","FormikModalFormAndList","dialogWidth","sortFunc","sortItemsByFom","formRenderer","item","listRenderer","Utenlandsopphold","getVisbility","includeValidationSummary","submitButtonLabel","utenlandsoppholdFormCleanup","description","validateYesOrNoIsAnswered","dateToday","date1YearFromNow","addLabel","modalTitle","dateRanges","u","from","to","dateRangesCollide","dateRangesExceedsRange","Date","validateUtenlandsoppholdNeste12Mnd","date1YearAgo","validateUtenlandsoppholdSiste12Mnd","iconRef","other","xlinkHref","womanSvg","manSvg","personnummer","CustomSVG","tittel","apen","fullNameFormat","mellomnavn","etternavn","intlId","intlValue","barn","antallBarnSummaryText","antall","DisplayTextWithLabel","formatDate","utenlandsoppholdListe","style","display","justifyContent","erDatoITidsperiode","erFamiliehendelsedatoIEnUtenlandsoppholdPeriode","familiehendelsedato","informasjonOmUtenlandsopphold","some","tidligereOpphold","senereOpphold","OppsummeringFormField","initialOppsummeringValues","oppgittKorrekteOpplysninger","OppsummeringFormComponents","OppsummeringFormConfig","mapAttachments","object","foundAttachments","Object","keys","isArray","mapBostedUtlandTilUtenlandsopphold","bostedUtland","land","tidsperiode","mapStateForInnsending","terminbekreftelseDato","mapBarnForInnsending","utenlandsoppholdDto","iNorgeNeste12Mnd","iNorgeSiste12Mnd","mapUtenlandsoppholdForInnsending","vedlegg","JSON","parse","stringify","isSending","setIsSending","Oppsummering","then","fnr","disabled","spinner","Umyndig","base64ToArrayBuffer","base64","binaryString","atob","Uint8Array","i","charCodeAt","version","xmlns","Sidetittel","pdf","preventDefault","browserInfo","pdfBlob","Blob","navigator","msSaveOrOpenBlob","open","URL","createObjectURL","openPdfPreview","mottattDato","format","saksNr","LenkepanelBase","border","focusable","injectIntl","rest","rx","ry","info","bankkonto","kontonummer","containerId","dokumenttittel","illustrasjon","ingress","setLanguage","veileder","tekst","lenke","renderSpinner","textAlign","padding","setData","loading","setLoading","setError","useEffect","ignore","err","fetch","useRequest","ansikt","erMyndig","BrowserRouter","path","localeFromSessionStorage","getLocaleFromSessionStorage","setLocale","IntlProvider","activeLocale","setLocaleInSessionStorage","component","VisApp","apiMock","onGet","reply","banknavn","onPost","referanseId","leveranseStatus","journalId","bind"],"sourceRoot":""}